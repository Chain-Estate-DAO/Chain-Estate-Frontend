{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "initialSupply",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_airDropContractAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_preSaleContractAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_realEstateWalletAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_developerMarketingWalletAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "airDropContractAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "airDropInvestTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "developerFeePercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "developerMarketingWalletAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "excludeUserFromFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "excludedFromFees",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getContractAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "includeUsersInFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialTimeStamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "marketingFeePercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "preSaleContractAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "realEstateTransactionFeePercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "realEstateWalletAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/access/Ownable.sol",
    "1": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/token/ERC20/ERC20.sol",
    "2": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/token/ERC20/IERC20.sol",
    "3": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/token/ERC20/extensions/IERC20Metadata.sol",
    "4": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/Context.sol",
    "7": "contracts/ChainEstateToken.sol"
  },
  "ast": {
    "absolutePath": "contracts/ChainEstateToken.sol",
    "exportedSymbols": {
      "ChainEstateToken": [
        1017
      ],
      "Context": [
        1039
      ],
      "ERC20": [
        1585
      ],
      "IERC20": [
        1663
      ],
      "IERC20Metadata": [
        1688
      ],
      "Ownable": [
        496
      ]
    },
    "id": 1018,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 701,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:31:7"
      },
      {
        "absolutePath": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 702,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1018,
        "sourceUnit": 1586,
        "src": "72:55:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/colem/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 703,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1018,
        "sourceUnit": 497,
        "src": "129:52:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 705,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1585,
              "src": "294:5:7"
            },
            "id": 706,
            "nodeType": "InheritanceSpecifier",
            "src": "294:5:7"
          },
          {
            "baseName": {
              "id": 707,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 496,
              "src": "301:7:7"
            },
            "id": 708,
            "nodeType": "InheritanceSpecifier",
            "src": "301:7:7"
          }
        ],
        "canonicalName": "ChainEstateToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 704,
          "nodeType": "StructuredDocumentation",
          "src": "185:78:7",
          "text": " @title Chain Estate Token\n @dev Main contract for Chain Estate"
        },
        "fullyImplemented": true,
        "id": 1017,
        "linearizedBaseContracts": [
          1017,
          496,
          1585,
          1688,
          1663,
          1039
        ],
        "name": "ChainEstateToken",
        "nameLocation": "274:16:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "dbe66ca0",
            "id": 712,
            "mutability": "mutable",
            "name": "excludedFromFees",
            "nameLocation": "488:16:7",
            "nodeType": "VariableDeclaration",
            "scope": 1017,
            "src": "455:49:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 711,
              "keyType": {
                "id": 709,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "464:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "455:25:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 710,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "475:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1497b01b",
            "id": 716,
            "mutability": "mutable",
            "name": "airDropInvestTime",
            "nameLocation": "675:17:7",
            "nodeType": "VariableDeclaration",
            "scope": 1017,
            "src": "639:53:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 715,
              "keyType": {
                "id": 713,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "648:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "639:28:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 714,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "659:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1ba7f00f",
            "id": 718,
            "mutability": "mutable",
            "name": "airDropContractAddress",
            "nameLocation": "792:22:7",
            "nodeType": "VariableDeclaration",
            "scope": 1017,
            "src": "777:37:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 717,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "777:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0f1fb037",
            "id": 720,
            "mutability": "mutable",
            "name": "preSaleContractAddress",
            "nameLocation": "909:22:7",
            "nodeType": "VariableDeclaration",
            "scope": 1017,
            "src": "894:37:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 719,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "894:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "502f91ec",
            "id": 722,
            "mutability": "mutable",
            "name": "realEstateWalletAddress",
            "nameLocation": "1037:23:7",
            "nodeType": "VariableDeclaration",
            "scope": 1017,
            "src": "1022:38:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 721,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1022:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "99c76d56",
            "id": 724,
            "mutability": "mutable",
            "name": "developerMarketingWalletAddress",
            "nameLocation": "1154:31:7",
            "nodeType": "VariableDeclaration",
            "scope": 1017,
            "src": "1139:46:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 723,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1139:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2fb47be4",
            "id": 726,
            "mutability": "mutable",
            "name": "initialTimeStamp",
            "nameLocation": "1268:16:7",
            "nodeType": "VariableDeclaration",
            "scope": 1017,
            "src": "1253:31:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 725,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1253:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6e2b0e47",
            "id": 729,
            "mutability": "mutable",
            "name": "realEstateTransactionFeePercent",
            "nameLocation": "1362:31:7",
            "nodeType": "VariableDeclaration",
            "scope": 1017,
            "src": "1347:50:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 727,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1347:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "33",
              "id": 728,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1396:1:7",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3_by_1",
                "typeString": "int_const 3"
              },
              "value": "3"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4fcd1285",
            "id": 732,
            "mutability": "mutable",
            "name": "developerFeePercent",
            "nameLocation": "1478:19:7",
            "nodeType": "VariableDeclaration",
            "scope": 1017,
            "src": "1463:38:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 730,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1463:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 731,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1500:1:7",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "da6fa55c",
            "id": 735,
            "mutability": "mutable",
            "name": "marketingFeePercent",
            "nameLocation": "1577:19:7",
            "nodeType": "VariableDeclaration",
            "scope": 1017,
            "src": "1562:38:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 733,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1562:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 734,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1599:1:7",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 834,
              "nodeType": "Block",
              "src": "2073:965:7",
              "statements": [
                {
                  "expression": {
                    "id": 755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 752,
                      "name": "initialTimeStamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 726,
                      "src": "2088:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 753,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "2107:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 754,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "2107:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2088:34:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 756,
                  "nodeType": "ExpressionStatement",
                  "src": "2088:34:7"
                },
                {
                  "expression": {
                    "id": 759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 757,
                      "name": "airDropContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 718,
                      "src": "2137:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 758,
                      "name": "_airDropContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 739,
                      "src": "2162:23:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2137:48:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 760,
                  "nodeType": "ExpressionStatement",
                  "src": "2137:48:7"
                },
                {
                  "expression": {
                    "id": 763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 761,
                      "name": "preSaleContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 720,
                      "src": "2200:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 762,
                      "name": "_preSaleContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 741,
                      "src": "2225:23:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2200:48:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 764,
                  "nodeType": "ExpressionStatement",
                  "src": "2200:48:7"
                },
                {
                  "expression": {
                    "id": 767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 765,
                      "name": "realEstateWalletAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 722,
                      "src": "2263:23:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 766,
                      "name": "_realEstateWalletAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 743,
                      "src": "2289:24:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2263:50:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 768,
                  "nodeType": "ExpressionStatement",
                  "src": "2263:50:7"
                },
                {
                  "expression": {
                    "id": 771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 769,
                      "name": "developerMarketingWalletAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 724,
                      "src": "2328:31:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 770,
                      "name": "_developerMarketingWalletAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 745,
                      "src": "2362:32:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2328:66:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 772,
                  "nodeType": "ExpressionStatement",
                  "src": "2328:66:7"
                },
                {
                  "expression": {
                    "id": 777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 773,
                        "name": "excludedFromFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 712,
                        "src": "2409:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 775,
                      "indexExpression": {
                        "id": 774,
                        "name": "realEstateWalletAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 722,
                        "src": "2426:23:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2409:41:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 776,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2453:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2409:48:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 778,
                  "nodeType": "ExpressionStatement",
                  "src": "2409:48:7"
                },
                {
                  "expression": {
                    "id": 783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 779,
                        "name": "excludedFromFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 712,
                        "src": "2472:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 781,
                      "indexExpression": {
                        "id": 780,
                        "name": "developerMarketingWalletAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 724,
                        "src": "2489:31:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2472:49:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 782,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2524:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2472:56:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 784,
                  "nodeType": "ExpressionStatement",
                  "src": "2472:56:7"
                },
                {
                  "expression": {
                    "id": 789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 785,
                        "name": "excludedFromFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 712,
                        "src": "2543:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 787,
                      "indexExpression": {
                        "id": 786,
                        "name": "preSaleContractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 720,
                        "src": "2560:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2543:40:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 788,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2586:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2543:47:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 790,
                  "nodeType": "ExpressionStatement",
                  "src": "2543:47:7"
                },
                {
                  "expression": {
                    "id": 795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 791,
                        "name": "excludedFromFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 712,
                        "src": "2643:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 793,
                      "indexExpression": {
                        "id": 792,
                        "name": "airDropContractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 718,
                        "src": "2660:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2643:40:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 794,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2686:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2643:47:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 796,
                  "nodeType": "ExpressionStatement",
                  "src": "2643:47:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 798,
                        "name": "airDropContractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 718,
                        "src": "2767:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 802,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "id": 799,
                                "name": "initialSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 737,
                                "src": "2792:13:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 800,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "2791:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "33",
                            "id": 801,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2809:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          "src": "2791:19:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "3130",
                          "id": 803,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2813:2:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "src": "2791:24:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 797,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1445,
                      "src": "2761:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2761:55:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 806,
                  "nodeType": "ExpressionStatement",
                  "src": "2761:55:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 808,
                        "name": "preSaleContractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 720,
                        "src": "2837:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "id": 809,
                                "name": "initialSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 737,
                                "src": "2862:13:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 810,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "2861:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "33",
                            "id": 811,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2879:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          "src": "2861:19:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "3130",
                          "id": 813,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2883:2:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "src": "2861:24:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 807,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1445,
                      "src": "2831:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2831:55:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 816,
                  "nodeType": "ExpressionStatement",
                  "src": "2831:55:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 818,
                        "name": "realEstateWalletAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 722,
                        "src": "2907:23:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 822,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "id": 819,
                                "name": "initialSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 737,
                                "src": "2933:13:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 820,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "2932:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "33",
                            "id": 821,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2950:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          "src": "2932:19:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "3130",
                          "id": 823,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2954:2:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "src": "2932:24:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 817,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1445,
                      "src": "2901:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2901:56:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 826,
                  "nodeType": "ExpressionStatement",
                  "src": "2901:56:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 828,
                        "name": "developerMarketingWalletAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 724,
                        "src": "2978:31:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 829,
                          "name": "initialSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 737,
                          "src": "3011:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "3130",
                          "id": 830,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3027:2:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "src": "3011:18:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 827,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1445,
                      "src": "2972:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2972:58:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 833,
                  "nodeType": "ExpressionStatement",
                  "src": "2972:58:7"
                }
              ]
            },
            "id": 835,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "436861696e457374617465546f6b656e",
                    "id": 748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2045:18:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_120479687e4957af2ccd00f3075f8c81bbe73e50111cff9f33f3899eb7b92057",
                      "typeString": "literal_string \"ChainEstateToken\""
                    },
                    "value": "ChainEstateToken"
                  },
                  {
                    "hexValue": "43484553",
                    "id": 749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2065:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_bdf10d818bf280e7003df1b379d53a550513cbb0b5346afb4601ed573d9e1e56",
                      "typeString": "literal_string \"CHES\""
                    },
                    "value": "CHES"
                  }
                ],
                "id": 750,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 747,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1585,
                  "src": "2039:5:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "2039:33:7"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 746,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 737,
                  "mutability": "mutable",
                  "name": "initialSupply",
                  "nameLocation": "1842:13:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 835,
                  "src": "1834:21:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 736,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1834:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 739,
                  "mutability": "mutable",
                  "name": "_airDropContractAddress",
                  "nameLocation": "1875:23:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 835,
                  "src": "1867:31:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 738,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1867:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 741,
                  "mutability": "mutable",
                  "name": "_preSaleContractAddress",
                  "nameLocation": "1918:23:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 835,
                  "src": "1910:31:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 740,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1910:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 743,
                  "mutability": "mutable",
                  "name": "_realEstateWalletAddress",
                  "nameLocation": "1961:24:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 835,
                  "src": "1953:32:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 742,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1953:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 745,
                  "mutability": "mutable",
                  "name": "_developerMarketingWalletAddress",
                  "nameLocation": "2005:32:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 835,
                  "src": "1997:40:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 744,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1997:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1823:215:7"
            },
            "returnParameters": {
              "id": 751,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2073:0:7"
            },
            "scope": 1017,
            "src": "1812:1226:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 846,
              "nodeType": "Block",
              "src": "3198:39:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 843,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "3224:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ChainEstateToken_$1017",
                          "typeString": "contract ChainEstateToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ChainEstateToken_$1017",
                          "typeString": "contract ChainEstateToken"
                        }
                      ],
                      "id": 842,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3216:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 841,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3216:7:7",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3216:13:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 840,
                  "id": 845,
                  "nodeType": "Return",
                  "src": "3209:20:7"
                }
              ]
            },
            "documentation": {
              "id": 836,
              "nodeType": "StructuredDocumentation",
              "src": "3046:87:7",
              "text": " @dev Returns the contract address\n @return contract address"
            },
            "functionSelector": "32a2c5d0",
            "id": 847,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getContractAddress",
            "nameLocation": "3148:18:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 837,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3166:2:7"
            },
            "returnParameters": {
              "id": 840,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 839,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 847,
                  "src": "3190:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 838,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3190:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3189:9:7"
            },
            "scope": 1017,
            "src": "3139:98:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 861,
              "nodeType": "Block",
              "src": "3438:48:7",
              "statements": [
                {
                  "expression": {
                    "id": 859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 855,
                        "name": "excludedFromFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 712,
                        "src": "3449:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 857,
                      "indexExpression": {
                        "id": 856,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 850,
                        "src": "3466:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3449:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 858,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3474:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3449:29:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 860,
                  "nodeType": "ExpressionStatement",
                  "src": "3449:29:7"
                }
              ]
            },
            "documentation": {
              "id": 848,
              "nodeType": "StructuredDocumentation",
              "src": "3245:127:7",
              "text": " @dev Adds a user to be excluded from fees.\n @param user address of the user to be excluded from fees."
            },
            "functionSelector": "78c1d245",
            "id": 862,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 853,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 852,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 438,
                  "src": "3428:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "3428:9:7"
              }
            ],
            "name": "excludeUserFromFees",
            "nameLocation": "3387:19:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 851,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 850,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "3415:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 862,
                  "src": "3407:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 849,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3407:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3406:14:7"
            },
            "returnParameters": {
              "id": 854,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3438:0:7"
            },
            "scope": 1017,
            "src": "3378:108:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 870,
              "nodeType": "Block",
              "src": "3555:41:7",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 867,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -4,
                      "src": "3573:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "timestamp",
                    "nodeType": "MemberAccess",
                    "src": "3573:15:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 866,
                  "id": 869,
                  "nodeType": "Return",
                  "src": "3566:22:7"
                }
              ]
            },
            "functionSelector": "6c9230db",
            "id": 871,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentTimestamp",
            "nameLocation": "3503:19:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 863,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3522:2:7"
            },
            "returnParameters": {
              "id": 866,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 865,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 871,
                  "src": "3546:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 864,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3546:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3545:9:7"
            },
            "scope": 1017,
            "src": "3494:102:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 885,
              "nodeType": "Block",
              "src": "3815:49:7",
              "statements": [
                {
                  "expression": {
                    "id": 883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 879,
                        "name": "excludedFromFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 712,
                        "src": "3826:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 881,
                      "indexExpression": {
                        "id": 880,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 874,
                        "src": "3843:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3826:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 882,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3851:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "3826:30:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 884,
                  "nodeType": "ExpressionStatement",
                  "src": "3826:30:7"
                }
              ]
            },
            "documentation": {
              "id": 872,
              "nodeType": "StructuredDocumentation",
              "src": "3604:146:7",
              "text": " @dev Removes a user from the fee exclusion.\n @param user address of the user than will now have to pay transaction fees."
            },
            "functionSelector": "bbeaa1f8",
            "id": 886,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 877,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 876,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 438,
                  "src": "3805:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "3805:9:7"
              }
            ],
            "name": "includeUsersInFees",
            "nameLocation": "3765:18:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 875,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 874,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "3792:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 886,
                  "src": "3784:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 873,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3784:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3783:14:7"
            },
            "returnParameters": {
              "id": 878,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3815:0:7"
            },
            "scope": 1017,
            "src": "3756:108:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1159
            ],
            "body": {
              "id": 968,
              "nodeType": "Block",
              "src": "4224:992:7",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 897,
                        "name": "excludedFromFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 712,
                        "src": "4331:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 900,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 898,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1029,
                          "src": "4348:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 899,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4348:12:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4331:30:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "baseExpression": {
                        "id": 901,
                        "name": "excludedFromFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 712,
                        "src": "4365:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 903,
                      "indexExpression": {
                        "id": 902,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 889,
                        "src": "4382:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4365:27:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4331:61:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 915,
                  "nodeType": "IfStatement",
                  "src": "4327:162:7",
                  "trueBody": {
                    "id": 914,
                    "nodeType": "Block",
                    "src": "4394:95:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 906,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1029,
                                "src": "4419:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 907,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4419:12:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 908,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 889,
                              "src": "4433:9:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 909,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 891,
                              "src": "4444:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 905,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1389,
                            "src": "4409:9:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 910,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4409:42:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 911,
                        "nodeType": "ExpressionStatement",
                        "src": "4409:42:7"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 912,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4473:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 896,
                        "id": 913,
                        "nodeType": "Return",
                        "src": "4466:11:7"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    917
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 917,
                      "mutability": "mutable",
                      "name": "realEstateFee",
                      "nameLocation": "4550:13:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 968,
                      "src": "4542:21:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 916,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4542:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 924,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 920,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 918,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 891,
                            "src": "4567:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 919,
                            "name": "realEstateTransactionFeePercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 729,
                            "src": "4576:31:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4567:40:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 921,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4566:42:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 922,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4611:3:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "4566:48:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4542:72:7"
                },
                {
                  "assignments": [
                    926
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 926,
                      "mutability": "mutable",
                      "name": "devMarketFee",
                      "nameLocation": "4689:12:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 968,
                      "src": "4681:20:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 925,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4681:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 936,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 932,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 927,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 891,
                            "src": "4705:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 930,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 928,
                                  "name": "developerFeePercent",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 732,
                                  "src": "4715:19:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 929,
                                  "name": "marketingFeePercent",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 735,
                                  "src": "4737:19:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4715:41:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 931,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "4714:43:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4705:52:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 933,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4704:54:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 934,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4761:3:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "4704:60:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4681:83:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 938,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1029,
                          "src": "4854:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 939,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4854:12:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 940,
                        "name": "realEstateWalletAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 722,
                        "src": "4868:23:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 941,
                        "name": "realEstateFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 917,
                        "src": "4893:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 937,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1389,
                      "src": "4844:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4844:63:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 943,
                  "nodeType": "ExpressionStatement",
                  "src": "4844:63:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 945,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1029,
                          "src": "4928:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 946,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4928:12:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 947,
                        "name": "developerMarketingWalletAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 724,
                        "src": "4942:31:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 948,
                        "name": "devMarketFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 926,
                        "src": "4975:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 944,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1389,
                      "src": "4918:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4918:70:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 950,
                  "nodeType": "ExpressionStatement",
                  "src": "4918:70:7"
                },
                {
                  "assignments": [
                    952
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 952,
                      "mutability": "mutable",
                      "name": "valueAfterFees",
                      "nameLocation": "5071:14:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 968,
                      "src": "5063:22:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 951,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5063:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 958,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 955,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 953,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 891,
                        "src": "5088:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 954,
                        "name": "realEstateFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 917,
                        "src": "5097:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5088:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 956,
                      "name": "devMarketFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 926,
                      "src": "5113:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5088:37:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5063:62:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 960,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1029,
                          "src": "5146:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 961,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5146:12:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 962,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 889,
                        "src": "5160:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 963,
                        "name": "valueAfterFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 952,
                        "src": "5171:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 959,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1389,
                      "src": "5136:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5136:50:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 965,
                  "nodeType": "ExpressionStatement",
                  "src": "5136:50:7"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5204:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 896,
                  "id": 967,
                  "nodeType": "Return",
                  "src": "5197:11:7"
                }
              ]
            },
            "documentation": {
              "id": 887,
              "nodeType": "StructuredDocumentation",
              "src": "3872:262:7",
              "text": " @dev Overrides the BEP20 transfer function to include transaction fees.\n @param recipient the recipient of the transfer\n @param amount the amount to be transfered\n @return bool representing if the transfer was successful"
            },
            "functionSelector": "a9059cbb",
            "id": 969,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "4149:8:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 893,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4200:8:7"
            },
            "parameters": {
              "id": 892,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 889,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "4166:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 969,
                  "src": "4158:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 888,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4158:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 891,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4185:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 969,
                  "src": "4177:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 890,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4177:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4157:35:7"
            },
            "returnParameters": {
              "id": 896,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 895,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 969,
                  "src": "4218:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 894,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4218:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4217:6:7"
            },
            "scope": 1017,
            "src": "4140:1076:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1584
            ],
            "body": {
              "id": 1015,
              "nodeType": "Block",
              "src": "5603:229:7",
              "statements": [
                {
                  "assignments": [
                    981
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 981,
                      "mutability": "mutable",
                      "name": "userBalance",
                      "nameLocation": "5622:11:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1015,
                      "src": "5614:19:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 980,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5614:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 985,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 983,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 974,
                        "src": "5646:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 982,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1138,
                      "src": "5636:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5636:13:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5614:35:7"
                },
                {
                  "expression": {
                    "id": 1005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 986,
                        "name": "airDropInvestTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 716,
                        "src": "5660:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 988,
                      "indexExpression": {
                        "id": 987,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 974,
                        "src": "5678:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5660:21:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1004,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1001,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 992,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 989,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 976,
                                "src": "5685:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "expression": {
                                  "id": 990,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "5693:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 991,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "5693:15:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5685:23:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1000,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 995,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 993,
                                      "name": "userBalance",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 981,
                                      "src": "5712:11:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "id": 994,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 976,
                                      "src": "5726:5:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "5712:19:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 996,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "5711:21:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "baseExpression": {
                                  "id": 997,
                                  "name": "airDropInvestTime",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 716,
                                  "src": "5735:17:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 999,
                                "indexExpression": {
                                  "id": 998,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 974,
                                  "src": "5753:2:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5735:21:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5711:45:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5685:71:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 1002,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "5684:73:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "id": 1003,
                        "name": "userBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 981,
                        "src": "5760:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5684:87:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5660:111:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1006,
                  "nodeType": "ExpressionStatement",
                  "src": "5660:111:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1010,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 972,
                        "src": "5808:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1011,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 974,
                        "src": "5814:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1012,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 976,
                        "src": "5818:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1007,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "5782:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ChainEstateToken_$1017_$",
                          "typeString": "type(contract super ChainEstateToken)"
                        }
                      },
                      "id": 1009,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_afterTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1584,
                      "src": "5782:25:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5782:42:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1014,
                  "nodeType": "ExpressionStatement",
                  "src": "5782:42:7"
                }
              ]
            },
            "documentation": {
              "id": 970,
              "nodeType": "StructuredDocumentation",
              "src": "5224:277:7",
              "text": " @dev After a token transfer, update the recipient address's air drop invest time since they have a later investment now.\n @param from the sender's address\n @param to the recipient's address\n @param value the amount that was transferred"
            },
            "id": 1016,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterTokenTransfer",
            "nameLocation": "5516:19:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 978,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5594:8:7"
            },
            "parameters": {
              "id": 977,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 972,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5544:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1016,
                  "src": "5536:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 971,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5536:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 974,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5558:2:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1016,
                  "src": "5550:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 973,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5550:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 976,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "5570:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1016,
                  "src": "5562:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 975,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5562:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5535:41:7"
            },
            "returnParameters": {
              "id": 979,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5603:0:7"
            },
            "scope": 1017,
            "src": "5507:325:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 1018,
        "src": "265:5570:7",
        "usedErrors": []
      }
    ],
    "src": "36:5799:7"
  },
  "bytecode": "60806040526003600d556001600e556001600f553480156200002057600080fd5b50604051620014c7380380620014c78339810160408190526200004391620004b9565b604080518082018252601081526f21b430b4b722b9ba30ba32aa37b5b2b760811b6020808301918252835180850190945260048452634348455360e01b9084015281519192916200009791600391620003f6565b508051620000ad906004906020840190620003f6565b505050620000ca620000c4620001fd60201b60201c565b62000201565b42600c55600880546001600160a01b038087166001600160a01b031992831617835560098054878316908416178155600a805487841690851681178255600b80548886169616959095178555600090815260066020526040808220805460ff19908116600190811790925596548616835281832080548816821790559354851682528082208054871685179055865485168252902080549094169091179092559154620001929216906200018088600362000536565b6200018c919062000558565b62000253565b600954620001b2906001600160a01b0316600a6200018088600362000536565b600a8054620001d4916001600160a01b03909116906200018088600362000536565b600b54620001f2906001600160a01b03166200018c600a8862000558565b5050505050620005ed565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216620002ae5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620002c291906200057b565b90915550506001600160a01b03821660009081526020819052604081208054839290620002f19084906200057b565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a362000345600083836200034e565b5050565b505050565b6001600160a01b0382166000908152602081815260408083205460079092529091205481906200037f848362000596565b6200038b919062000536565b62000397428562000536565b620003a391906200057b565b620003af919062000558565b60076000856001600160a01b03166001600160a01b0316815260200190815260200160002081905550620003f08484846200034960201b620008a81760201c565b50505050565b8280546200040490620005b0565b90600052602060002090601f01602090048101928262000428576000855562000473565b82601f106200044357805160ff191683800117855562000473565b8280016001018555821562000473579182015b828111156200047357825182559160200191906001019062000456565b506200048192915062000485565b5090565b5b8082111562000481576000815560010162000486565b80516001600160a01b0381168114620004b457600080fd5b919050565b600080600080600060a08688031215620004d257600080fd5b85519450620004e4602087016200049c565b9350620004f4604087016200049c565b925062000504606087016200049c565b915062000514608087016200049c565b90509295509295909350565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161562000553576200055362000520565b500290565b6000826200057657634e487b7160e01b600052601260045260246000fd5b500490565b6000821982111562000591576200059162000520565b500190565b600082821015620005ab57620005ab62000520565b500390565b600181811c90821680620005c557607f821691505b60208210811415620005e757634e487b7160e01b600052602260045260246000fd5b50919050565b610eca80620005fd6000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c80636e2b0e47116100f9578063a457c2d711610097578063da6fa55c11610071578063da6fa55c14610398578063dbe66ca0146103a1578063dd62ed3e146103c4578063f2fde38b146103fd57600080fd5b8063a457c2d71461035f578063a9059cbb14610372578063bbeaa1f81461038557600080fd5b806378c1d245116100d357806378c1d245146103205780638da5cb5b1461033357806395d89b411461034457806399c76d561461034c57600080fd5b80636e2b0e47146102e457806370a08231146102ed578063715018a61461031657600080fd5b80632fb47be411610166578063395093511161014057806339509351146102af5780634fcd1285146102c2578063502f91ec146102cb5780636c9230db146102de57600080fd5b80632fb47be414610291578063313ce5671461029a57806332a2c5d0146102a957600080fd5b80631497b01b116101a25780631497b01b1461023557806318160ddd146102635780631ba7f00f1461026b57806323b872dd1461027e57600080fd5b806306fdde03146101c9578063095ea7b3146101e75780630f1fb0371461020a575b600080fd5b6101d1610410565b6040516101de9190610c72565b60405180910390f35b6101fa6101f5366004610ce3565b6104a2565b60405190151581526020016101de565b60095461021d906001600160a01b031681565b6040516001600160a01b0390911681526020016101de565b610255610243366004610d0d565b60076020526000908152604090205481565b6040519081526020016101de565b600254610255565b60085461021d906001600160a01b031681565b6101fa61028c366004610d2f565b6104b9565b610255600c5481565b604051601281526020016101de565b3061021d565b6101fa6102bd366004610ce3565b610568565b610255600e5481565b600a5461021d906001600160a01b031681565b42610255565b610255600d5481565b6102556102fb366004610d0d565b6001600160a01b031660009081526020819052604090205490565b61031e6105a4565b005b61031e61032e366004610d0d565b6105da565b6005546001600160a01b031661021d565b6101d1610628565b600b5461021d906001600160a01b031681565b6101fa61036d366004610ce3565b610637565b6101fa610380366004610ce3565b6106d0565b61031e610393366004610d0d565b6107c2565b610255600f5481565b6101fa6103af366004610d0d565b60066020526000908152604090205460ff1681565b6102556103d2366004610d6b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61031e61040b366004610d0d565b61080d565b60606003805461041f90610d9e565b80601f016020809104026020016040519081016040528092919081815260200182805461044b90610d9e565b80156104985780601f1061046d57610100808354040283529160200191610498565b820191906000526020600020905b81548152906001019060200180831161047b57829003601f168201915b5050505050905090565b60006104af3384846108ad565b5060015b92915050565b60006104c68484846109d1565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156105505760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61055d85338584036108ad565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916104af91859061059f908690610def565b6108ad565b6005546001600160a01b031633146105ce5760405162461bcd60e51b815260040161054790610e07565b6105d86000610bab565b565b6005546001600160a01b031633146106045760405162461bcd60e51b815260040161054790610e07565b6001600160a01b03166000908152600660205260409020805460ff19166001179055565b60606004805461041f90610d9e565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156106b95760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610547565b6106c633858584036108ad565b5060019392505050565b3360009081526006602052604081205460ff168061070657506001600160a01b03831660009081526006602052604090205460ff165b1561071e576107163384846109d1565b5060016104b3565b60006064600d54846107309190610e3c565b61073a9190610e5b565b905060006064600f54600e546107509190610def565b61075a9086610e3c565b6107649190610e5b565b905061077c33600a546001600160a01b0316846109d1565b61079233600b546001600160a01b0316836109d1565b60008161079f8487610e7d565b6107a99190610e7d565b90506107b63387836109d1565b50600195945050505050565b6005546001600160a01b031633146107ec5760405162461bcd60e51b815260040161054790610e07565b6001600160a01b03166000908152600660205260409020805460ff19169055565b6005546001600160a01b031633146108375760405162461bcd60e51b815260040161054790610e07565b6001600160a01b03811661089c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610547565b6108a581610bab565b50565b505050565b6001600160a01b03831661090f5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610547565b6001600160a01b0382166109705760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610547565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610a355760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610547565b6001600160a01b038216610a975760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610547565b6001600160a01b03831660009081526020819052604090205481811015610b0f5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610547565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610b46908490610def565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b9291815260200190565b60405180910390a3610ba5848484610bfd565b50505050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216600090815260208181526040808320546007909252909120548190610c2c8483610e7d565b610c369190610e3c565b610c404285610e3c565b610c4a9190610def565b610c549190610e5b565b6001600160a01b038416600090815260076020526040902055610ba5565b600060208083528351808285015260005b81811015610c9f57858101830151858201604001528201610c83565b81811115610cb1576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610cde57600080fd5b919050565b60008060408385031215610cf657600080fd5b610cff83610cc7565b946020939093013593505050565b600060208284031215610d1f57600080fd5b610d2882610cc7565b9392505050565b600080600060608486031215610d4457600080fd5b610d4d84610cc7565b9250610d5b60208501610cc7565b9150604084013590509250925092565b60008060408385031215610d7e57600080fd5b610d8783610cc7565b9150610d9560208401610cc7565b90509250929050565b600181811c90821680610db257607f821691505b60208210811415610dd357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610e0257610e02610dd9565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000816000190483118215151615610e5657610e56610dd9565b500290565b600082610e7857634e487b7160e01b600052601260045260246000fd5b500490565b600082821015610e8f57610e8f610dd9565b50039056fea2646970667358221220ea9fa1586129cfbec1f8cab0263fabb717af3d1af0104a43c5680031c821ed8c64736f6c634300080b0033",
  "bytecodeSha1": "e92d790a1423d3f8b6eb74f7482a7a9e8a4ed7fa",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.11+commit.d7f03943"
  },
  "contractName": "ChainEstateToken",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "55": [
            2006,
            2028,
            true
          ]
        }
      },
      "1": {
        "ERC20._approve": {
          "50": [
            10150,
            10169,
            true
          ],
          "51": [
            10228,
            10249,
            true
          ]
        },
        "ERC20._transfer": {
          "52": [
            7457,
            7477,
            true
          ],
          "53": [
            7537,
            7560,
            true
          ],
          "54": [
            7728,
            7751,
            true
          ]
        },
        "ERC20.decreaseAllowance": {
          "49": [
            6631,
            6666,
            true
          ]
        },
        "ERC20.transferFrom": {
          "48": [
            5148,
            5174,
            true
          ]
        }
      },
      "2": {},
      "3": {},
      "4": {},
      "7": {
        "ChainEstateToken.transfer": {
          "46": [
            4331,
            4361,
            true
          ],
          "47": [
            4365,
            4392,
            false
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "42": [
            2378,
            2395
          ],
          "43": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "5": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "16": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "29": [
            1998,
            2071
          ],
          "30": [
            2081,
            2109
          ]
        }
      },
      "1": {
        "ERC20._approve": {
          "31": [
            10142,
            10210
          ],
          "32": [
            10220,
            10288
          ],
          "33": [
            10299,
            10335
          ],
          "34": [
            10345,
            10382
          ]
        },
        "ERC20._transfer": {
          "35": [
            7449,
            7519
          ],
          "36": [
            7529,
            7600
          ],
          "37": [
            7720,
            7794
          ],
          "38": [
            7828,
            7870
          ],
          "39": [
            7890,
            7920
          ],
          "40": [
            7931,
            7971
          ],
          "41": [
            7982,
            8028
          ]
        },
        "ERC20.allowance": {
          "6": [
            4059,
            4093
          ]
        },
        "ERC20.approve": {
          "8": [
            4337,
            4376
          ],
          "10": [
            4386,
            4397
          ]
        },
        "ERC20.balanceOf": {
          "4": [
            3486,
            3511
          ]
        },
        "ERC20.decimals": {
          "1": [
            3153,
            3162
          ]
        },
        "ERC20.decreaseAllowance": {
          "19": [
            6623,
            6708
          ],
          "20": [
            6742,
            6809
          ],
          "21": [
            6830,
            6841
          ]
        },
        "ERC20.increaseAllowance": {
          "15": [
            5848,
            5928
          ]
        },
        "ERC20.name": {
          "7": [
            2220,
            2232
          ]
        },
        "ERC20.symbol": {
          "18": [
            2433,
            2447
          ]
        },
        "ERC20.totalSupply": {
          "0": [
            3309,
            3328
          ]
        },
        "ERC20.transferFrom": {
          "11": [
            5023,
            5059
          ],
          "12": [
            5140,
            5219
          ],
          "13": [
            5253,
            5310
          ],
          "14": [
            5331,
            5342
          ]
        }
      },
      "2": {},
      "3": {},
      "4": {
        "Context._msgSender": {
          "9": [
            712,
            729
          ]
        }
      },
      "7": {
        "ChainEstateToken._afterTokenTransfer": {
          "44": [
            5660,
            5771
          ],
          "45": [
            5782,
            5824
          ]
        },
        "ChainEstateToken.excludeUserFromFees": {
          "17": [
            3449,
            3478
          ]
        },
        "ChainEstateToken.getContractAddress": {
          "2": [
            3209,
            3229
          ]
        },
        "ChainEstateToken.getCurrentTimestamp": {
          "3": [
            3566,
            3588
          ]
        },
        "ChainEstateToken.includeUsersInFees": {
          "28": [
            3826,
            3856
          ]
        },
        "ChainEstateToken.transfer": {
          "22": [
            4409,
            4451
          ],
          "23": [
            4466,
            4477
          ],
          "24": [
            4844,
            4907
          ],
          "25": [
            4918,
            4988
          ],
          "26": [
            5136,
            5186
          ],
          "27": [
            5197,
            5208
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.4.1/Context",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/ERC20",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/IERC20Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/Ownable"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101c45760003560e01c80636e2b0e47116100f9578063a457c2d711610097578063da6fa55c11610071578063da6fa55c14610398578063dbe66ca0146103a1578063dd62ed3e146103c4578063f2fde38b146103fd57600080fd5b8063a457c2d71461035f578063a9059cbb14610372578063bbeaa1f81461038557600080fd5b806378c1d245116100d357806378c1d245146103205780638da5cb5b1461033357806395d89b411461034457806399c76d561461034c57600080fd5b80636e2b0e47146102e457806370a08231146102ed578063715018a61461031657600080fd5b80632fb47be411610166578063395093511161014057806339509351146102af5780634fcd1285146102c2578063502f91ec146102cb5780636c9230db146102de57600080fd5b80632fb47be414610291578063313ce5671461029a57806332a2c5d0146102a957600080fd5b80631497b01b116101a25780631497b01b1461023557806318160ddd146102635780631ba7f00f1461026b57806323b872dd1461027e57600080fd5b806306fdde03146101c9578063095ea7b3146101e75780630f1fb0371461020a575b600080fd5b6101d1610410565b6040516101de9190610c72565b60405180910390f35b6101fa6101f5366004610ce3565b6104a2565b60405190151581526020016101de565b60095461021d906001600160a01b031681565b6040516001600160a01b0390911681526020016101de565b610255610243366004610d0d565b60076020526000908152604090205481565b6040519081526020016101de565b600254610255565b60085461021d906001600160a01b031681565b6101fa61028c366004610d2f565b6104b9565b610255600c5481565b604051601281526020016101de565b3061021d565b6101fa6102bd366004610ce3565b610568565b610255600e5481565b600a5461021d906001600160a01b031681565b42610255565b610255600d5481565b6102556102fb366004610d0d565b6001600160a01b031660009081526020819052604090205490565b61031e6105a4565b005b61031e61032e366004610d0d565b6105da565b6005546001600160a01b031661021d565b6101d1610628565b600b5461021d906001600160a01b031681565b6101fa61036d366004610ce3565b610637565b6101fa610380366004610ce3565b6106d0565b61031e610393366004610d0d565b6107c2565b610255600f5481565b6101fa6103af366004610d0d565b60066020526000908152604090205460ff1681565b6102556103d2366004610d6b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61031e61040b366004610d0d565b61080d565b60606003805461041f90610d9e565b80601f016020809104026020016040519081016040528092919081815260200182805461044b90610d9e565b80156104985780601f1061046d57610100808354040283529160200191610498565b820191906000526020600020905b81548152906001019060200180831161047b57829003601f168201915b5050505050905090565b60006104af3384846108ad565b5060015b92915050565b60006104c68484846109d1565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156105505760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61055d85338584036108ad565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916104af91859061059f908690610def565b6108ad565b6005546001600160a01b031633146105ce5760405162461bcd60e51b815260040161054790610e07565b6105d86000610bab565b565b6005546001600160a01b031633146106045760405162461bcd60e51b815260040161054790610e07565b6001600160a01b03166000908152600660205260409020805460ff19166001179055565b60606004805461041f90610d9e565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156106b95760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610547565b6106c633858584036108ad565b5060019392505050565b3360009081526006602052604081205460ff168061070657506001600160a01b03831660009081526006602052604090205460ff165b1561071e576107163384846109d1565b5060016104b3565b60006064600d54846107309190610e3c565b61073a9190610e5b565b905060006064600f54600e546107509190610def565b61075a9086610e3c565b6107649190610e5b565b905061077c33600a546001600160a01b0316846109d1565b61079233600b546001600160a01b0316836109d1565b60008161079f8487610e7d565b6107a99190610e7d565b90506107b63387836109d1565b50600195945050505050565b6005546001600160a01b031633146107ec5760405162461bcd60e51b815260040161054790610e07565b6001600160a01b03166000908152600660205260409020805460ff19169055565b6005546001600160a01b031633146108375760405162461bcd60e51b815260040161054790610e07565b6001600160a01b03811661089c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610547565b6108a581610bab565b50565b505050565b6001600160a01b03831661090f5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610547565b6001600160a01b0382166109705760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610547565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610a355760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610547565b6001600160a01b038216610a975760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610547565b6001600160a01b03831660009081526020819052604090205481811015610b0f5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610547565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610b46908490610def565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b9291815260200190565b60405180910390a3610ba5848484610bfd565b50505050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216600090815260208181526040808320546007909252909120548190610c2c8483610e7d565b610c369190610e3c565b610c404285610e3c565b610c4a9190610def565b610c549190610e5b565b6001600160a01b038416600090815260076020526040902055610ba5565b600060208083528351808285015260005b81811015610c9f57858101830151858201604001528201610c83565b81811115610cb1576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610cde57600080fd5b919050565b60008060408385031215610cf657600080fd5b610cff83610cc7565b946020939093013593505050565b600060208284031215610d1f57600080fd5b610d2882610cc7565b9392505050565b600080600060608486031215610d4457600080fd5b610d4d84610cc7565b9250610d5b60208501610cc7565b9150604084013590509250925092565b60008060408385031215610d7e57600080fd5b610d8783610cc7565b9150610d9560208401610cc7565b90509250929050565b600181811c90821680610db257607f821691505b60208210811415610dd357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610e0257610e02610dd9565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000816000190483118215151615610e5657610e56610dd9565b500290565b600082610e7857634e487b7160e01b600052601260045260246000fd5b500490565b600082821015610e8f57610e8f610dd9565b50039056fea2646970667358221220ea9fa1586129cfbec1f8cab0263fabb717af3d1af0104a43c5680031c821ed8c64736f6c634300080b0033",
  "deployedSourceMap": "265:5570:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2141:98:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4238:166;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:8;;1211:22;1193:41;;1181:2;1166:18;4238:166:1;1053:187:8;894:37:7;;;;;-1:-1:-1;;;;;894:37:7;;;;;;-1:-1:-1;;;;;1409:32:8;;;1391:51;;1379:2;1364:18;894:37:7;1245:203:8;639:53:7;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1790:25:8;;;1778:2;1763:18;639:53:7;1644:177:8;3229:106:1;3316:12;;3229:106;;777:37:7;;;;;-1:-1:-1;;;;;777:37:7;;;4871:478:1;;;;;;:::i;:::-;;:::i;1253:31:7:-;;;;;;3078:91:1;;;3160:2;2301:36:8;;2289:2;2274:18;3078:91:1;2159:184:8;3139:98:7;3224:4;3139:98;;5744:212:1;;;;;;:::i;:::-;;:::i;1463:38:7:-;;;;;;1022;;;;;-1:-1:-1;;;;;1022:38:7;;;3494:102;3573:15;3494:102;;1347:50;;;;;;3393:125:1;;;;;;:::i;:::-;-1:-1:-1;;;;;3493:18:1;3467:7;3493:18;;;;;;;;;;;;3393:125;1668:101:0;;;:::i;:::-;;3378:108:7;;;;;;:::i;:::-;;:::i;1036:85:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;1036:85;;2352:102:1;;;:::i;1139:46:7:-;;;;;-1:-1:-1;;;;;1139:46:7;;;6443:405:1;;;;;;:::i;:::-;;:::i;4140:1076:7:-;;;;;;:::i;:::-;;:::i;3756:108::-;;;;;;:::i;:::-;;:::i;1562:38::-;;;;;;455:49;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3951:149:1;;;;;;:::i;:::-;-1:-1:-1;;;;;4066:18:1;;;4040:7;4066:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3951:149;1918:198:0;;;;;;:::i;:::-;;:::i;2141:98:1:-;2195:13;2227:5;2220:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2141:98;:::o;4238:166::-;4321:4;4337:39;719:10:4;4360:7:1;4369:6;4337:8;:39::i;:::-;-1:-1:-1;4393:4:1;4238:166;;;;;:::o;4871:478::-;5007:4;5023:36;5033:6;5041:9;5052:6;5023:9;:36::i;:::-;-1:-1:-1;;;;;5097:19:1;;5070:24;5097:19;;;:11;:19;;;;;;;;719:10:4;5097:33:1;;;;;;;;5148:26;;;;5140:79;;;;-1:-1:-1;;;5140:79:1;;3200:2:8;5140:79:1;;;3182:21:8;3239:2;3219:18;;;3212:30;3278:34;3258:18;;;3251:62;-1:-1:-1;;;3329:18:8;;;3322:38;3377:19;;5140:79:1;;;;;;;;;5253:57;5262:6;719:10:4;5303:6:1;5284:16;:25;5253:8;:57::i;:::-;-1:-1:-1;5338:4:1;;4871:478;-1:-1:-1;;;;4871:478:1:o;5744:212::-;719:10:4;5832:4:1;5880:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;5880:34:1;;;;;;;;;;5832:4;;5848:80;;5871:7;;5880:47;;5917:10;;5880:47;:::i;:::-;5848:8;:80::i;1668:101:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;3378:108:7:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;3449:22:7::1;;::::0;;;:16:::1;:22;::::0;;;;:29;;-1:-1:-1;;3449:29:7::1;3474:4;3449:29;::::0;;3378:108::o;2352:102:1:-;2408:13;2440:7;2433:14;;;;;:::i;6443:405::-;719:10:4;6536:4:1;6579:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6579:34:1;;;;;;;;;;6631:35;;;;6623:85;;;;-1:-1:-1;;;6623:85:1;;4235:2:8;6623:85:1;;;4217:21:8;4274:2;4254:18;;;4247:30;4313:34;4293:18;;;4286:62;-1:-1:-1;;;4364:18:8;;;4357:35;4409:19;;6623:85:1;4033:401:8;6623:85:1;6742:67;719:10:4;6765:7:1;6793:15;6774:16;:34;6742:8;:67::i;:::-;-1:-1:-1;6837:4:1;;6443:405;-1:-1:-1;;;6443:405:1:o;4140:1076:7:-;719:10:4;4218:4:7;4331:30;;;:16;:30;;;;;;;;;:61;;-1:-1:-1;;;;;;4365:27:7;;;;;;:16;:27;;;;;;;;4331:61;4327:162;;;4409:42;719:10:4;4433:9:7;4444:6;4409:9;:42::i;:::-;-1:-1:-1;4473:4:7;4466:11;;4327:162;4542:21;4611:3;4576:31;;4567:6;:40;;;;:::i;:::-;4566:48;;;;:::i;:::-;4542:72;;4681:20;4761:3;4737:19;;4715;;:41;;;;:::i;:::-;4705:52;;:6;:52;:::i;:::-;4704:60;;;;:::i;:::-;4681:83;-1:-1:-1;4844:63:7;719:10:4;4868:23:7;;-1:-1:-1;;;;;4868:23:7;4893:13;4844:9;:63::i;:::-;4918:70;719:10:4;4942:31:7;;-1:-1:-1;;;;;4942:31:7;4975:12;4918:9;:70::i;:::-;5063:22;5113:12;5088:22;5097:13;5088:6;:22;:::i;:::-;:37;;;;:::i;:::-;5063:62;-1:-1:-1;5136:50:7;719:10:4;5160:9:7;5171:14;5136:9;:50::i;:::-;-1:-1:-1;5204:4:7;;4140:1076;-1:-1:-1;;;;;4140:1076:7:o;3756:108::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;3826:22:7::1;3851:5;3826:22:::0;;;:16:::1;:22;::::0;;;;:30;;-1:-1:-1;;3826:30:7::1;::::0;;3756:108::o;1918:198:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;5166:2:8;1998:73:0::1;::::0;::::1;5148:21:8::0;5205:2;5185:18;;;5178:30;5244:34;5224:18;;;5217:62;-1:-1:-1;;;5295:18:8;;;5288:36;5341:19;;1998:73:0::1;4964:402:8::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;11682:120:1:-;;;;:::o;10019:370::-;-1:-1:-1;;;;;10150:19:1;;10142:68;;;;-1:-1:-1;;;10142:68:1;;5573:2:8;10142:68:1;;;5555:21:8;5612:2;5592:18;;;5585:30;5651:34;5631:18;;;5624:62;-1:-1:-1;;;5702:18:8;;;5695:34;5746:19;;10142:68:1;5371:400:8;10142:68:1;-1:-1:-1;;;;;10228:21:1;;10220:68;;;;-1:-1:-1;;;10220:68:1;;5978:2:8;10220:68:1;;;5960:21:8;6017:2;5997:18;;;5990:30;6056:34;6036:18;;;6029:62;-1:-1:-1;;;6107:18:8;;;6100:32;6149:19;;10220:68:1;5776:398:8;10220:68:1;-1:-1:-1;;;;;10299:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10350:32;;1790:25:8;;;10350:32:1;;1763:18:8;10350:32:1;;;;;;;10019:370;;;:::o;7322:713::-;-1:-1:-1;;;;;7457:20:1;;7449:70;;;;-1:-1:-1;;;7449:70:1;;6381:2:8;7449:70:1;;;6363:21:8;6420:2;6400:18;;;6393:30;6459:34;6439:18;;;6432:62;-1:-1:-1;;;6510:18:8;;;6503:35;6555:19;;7449:70:1;6179:401:8;7449:70:1;-1:-1:-1;;;;;7537:23:1;;7529:71;;;;-1:-1:-1;;;7529:71:1;;6787:2:8;7529:71:1;;;6769:21:8;6826:2;6806:18;;;6799:30;6865:34;6845:18;;;6838:62;-1:-1:-1;;;6916:18:8;;;6909:33;6959:19;;7529:71:1;6585:399:8;7529:71:1;-1:-1:-1;;;;;7693:17:1;;7669:21;7693:17;;;;;;;;;;;7728:23;;;;7720:74;;;;-1:-1:-1;;;7720:74:1;;7191:2:8;7720:74:1;;;7173:21:8;7230:2;7210:18;;;7203:30;7269:34;7249:18;;;7242:62;-1:-1:-1;;;7320:18:8;;;7313:36;7366:19;;7720:74:1;6989:402:8;7720:74:1;-1:-1:-1;;;;;7828:17:1;;;:9;:17;;;;;;;;;;;7848:22;;;7828:42;;7890:20;;;;;;;;:30;;7864:6;;7828:9;7890:30;;7864:6;;7890:30;:::i;:::-;;;;;;;;7953:9;-1:-1:-1;;;;;7936:35:1;7945:6;-1:-1:-1;;;;;7936:35:1;;7964:6;7936:35;;;;1790:25:8;;1778:2;1763:18;;1644:177;7936:35:1;;;;;;;;7982:46;8002:6;8010:9;8021:6;7982:19;:46::i;:::-;7439:596;7322:713;;;:::o;2270:187:0:-;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;5507:325:7:-;-1:-1:-1;;;;;3493:18:1;;5614:19:7;3493:18:1;;;;;;;;;;;;5735:17:7;:21;;;;;;;3493:18:1;;5712:19:7;5726:5;3493:18:1;5712:19:7;:::i;:::-;5711:45;;;;:::i;:::-;5685:23;5693:15;5685:5;:23;:::i;:::-;:71;;;;:::i;:::-;5684:87;;;;:::i;:::-;-1:-1:-1;;;;;5660:21:7;;;;;;:17;:21;;;;;:111;5782:42;11682:120:1;14:597:8;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:8;574:15;-1:-1:-1;;570:29:8;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:8:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:8;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:8:o;1453:186::-;1512:6;1565:2;1553:9;1544:7;1540:23;1536:32;1533:52;;;1581:1;1578;1571:12;1533:52;1604:29;1623:9;1604:29;:::i;:::-;1594:39;1453:186;-1:-1:-1;;;1453:186:8:o;1826:328::-;1903:6;1911;1919;1972:2;1960:9;1951:7;1947:23;1943:32;1940:52;;;1988:1;1985;1978:12;1940:52;2011:29;2030:9;2011:29;:::i;:::-;2001:39;;2059:38;2093:2;2082:9;2078:18;2059:38;:::i;:::-;2049:48;;2144:2;2133:9;2129:18;2116:32;2106:42;;1826:328;;;;;:::o;2348:260::-;2416:6;2424;2477:2;2465:9;2456:7;2452:23;2448:32;2445:52;;;2493:1;2490;2483:12;2445:52;2516:29;2535:9;2516:29;:::i;:::-;2506:39;;2564:38;2598:2;2587:9;2583:18;2564:38;:::i;:::-;2554:48;;2348:260;;;;;:::o;2613:380::-;2692:1;2688:12;;;;2735;;;2756:61;;2810:4;2802:6;2798:17;2788:27;;2756:61;2863:2;2855:6;2852:14;2832:18;2829:38;2826:161;;;2909:10;2904:3;2900:20;2897:1;2890:31;2944:4;2941:1;2934:15;2972:4;2969:1;2962:15;2826:161;;2613:380;;;:::o;3407:127::-;3468:10;3463:3;3459:20;3456:1;3449:31;3499:4;3496:1;3489:15;3523:4;3520:1;3513:15;3539:128;3579:3;3610:1;3606:6;3603:1;3600:13;3597:39;;;3616:18;;:::i;:::-;-1:-1:-1;3652:9:8;;3539:128::o;3672:356::-;3874:2;3856:21;;;3893:18;;;3886:30;3952:34;3947:2;3932:18;;3925:62;4019:2;4004:18;;3672:356::o;4439:168::-;4479:7;4545:1;4541;4537:6;4533:14;4530:1;4527:21;4522:1;4515:9;4508:17;4504:45;4501:71;;;4552:18;;:::i;:::-;-1:-1:-1;4592:9:8;;4439:168::o;4612:217::-;4652:1;4678;4668:132;;4722:10;4717:3;4713:20;4710:1;4703:31;4757:4;4754:1;4747:15;4785:4;4782:1;4775:15;4668:132;-1:-1:-1;4814:9:8;;4612:217::o;4834:125::-;4874:4;4902:1;4899;4896:8;4893:34;;;4907:18;;:::i;:::-;-1:-1:-1;4944:9:8;;4834:125::o",
  "language": "Solidity",
  "natspec": {
    "details": "Main contract for Chain Estate",
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "excludeUserFromFees(address)": {
        "details": "Adds a user to be excluded from fees.",
        "params": {
          "user": "address of the user to be excluded from fees."
        }
      },
      "getContractAddress()": {
        "details": "Returns the contract address",
        "returns": {
          "_0": "contract address"
        }
      },
      "includeUsersInFees(address)": {
        "details": "Removes a user from the fee exclusion.",
        "params": {
          "user": "address of the user than will now have to pay transaction fees."
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "Overrides the BEP20 transfer function to include transaction fees.",
        "params": {
          "amount": "the amount to be transfered",
          "recipient": "the recipient of the transfer"
        },
        "returns": {
          "_0": "bool representing if the transfer was successful"
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "Chain Estate Token",
    "version": 1
  },
  "offset": [
    265,
    5835
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6E2B0E47 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xDA6FA55C GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDA6FA55C EQ PUSH2 0x398 JUMPI DUP1 PUSH4 0xDBE66CA0 EQ PUSH2 0x3A1 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3C4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x35F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x372 JUMPI DUP1 PUSH4 0xBBEAA1F8 EQ PUSH2 0x385 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x78C1D245 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x78C1D245 EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x344 JUMPI DUP1 PUSH4 0x99C76D56 EQ PUSH2 0x34C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6E2B0E47 EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x316 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2FB47BE4 GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x39509351 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0x4FCD1285 EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0x502F91EC EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0x6C9230DB EQ PUSH2 0x2DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2FB47BE4 EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0x32A2C5D0 EQ PUSH2 0x2A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1497B01B GT PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x1497B01B EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0x1BA7F00F EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x27E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0xF1FB037 EQ PUSH2 0x20A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D1 PUSH2 0x410 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0xC72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FA PUSH2 0x1F5 CALLDATASIZE PUSH1 0x4 PUSH2 0xCE3 JUMP JUMPDEST PUSH2 0x4A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1DE JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x21D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1DE JUMP JUMPDEST PUSH2 0x255 PUSH2 0x243 CALLDATASIZE PUSH1 0x4 PUSH2 0xD0D JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1DE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x255 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x21D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1FA PUSH2 0x28C CALLDATASIZE PUSH1 0x4 PUSH2 0xD2F JUMP JUMPDEST PUSH2 0x4B9 JUMP JUMPDEST PUSH2 0x255 PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1DE JUMP JUMPDEST ADDRESS PUSH2 0x21D JUMP JUMPDEST PUSH2 0x1FA PUSH2 0x2BD CALLDATASIZE PUSH1 0x4 PUSH2 0xCE3 JUMP JUMPDEST PUSH2 0x568 JUMP JUMPDEST PUSH2 0x255 PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x21D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST TIMESTAMP PUSH2 0x255 JUMP JUMPDEST PUSH2 0x255 PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH2 0x255 PUSH2 0x2FB CALLDATASIZE PUSH1 0x4 PUSH2 0xD0D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x31E PUSH2 0x5A4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31E PUSH2 0x32E CALLDATASIZE PUSH1 0x4 PUSH2 0xD0D JUMP JUMPDEST PUSH2 0x5DA JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x21D JUMP JUMPDEST PUSH2 0x1D1 PUSH2 0x628 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x21D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1FA PUSH2 0x36D CALLDATASIZE PUSH1 0x4 PUSH2 0xCE3 JUMP JUMPDEST PUSH2 0x637 JUMP JUMPDEST PUSH2 0x1FA PUSH2 0x380 CALLDATASIZE PUSH1 0x4 PUSH2 0xCE3 JUMP JUMPDEST PUSH2 0x6D0 JUMP JUMPDEST PUSH2 0x31E PUSH2 0x393 CALLDATASIZE PUSH1 0x4 PUSH2 0xD0D JUMP JUMPDEST PUSH2 0x7C2 JUMP JUMPDEST PUSH2 0x255 PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1FA PUSH2 0x3AF CALLDATASIZE PUSH1 0x4 PUSH2 0xD0D JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x255 PUSH2 0x3D2 CALLDATASIZE PUSH1 0x4 PUSH2 0xD6B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x31E PUSH2 0x40B CALLDATASIZE PUSH1 0x4 PUSH2 0xD0D JUMP JUMPDEST PUSH2 0x80D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x41F SWAP1 PUSH2 0xD9E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x44B SWAP1 PUSH2 0xD9E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x498 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x46D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x498 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x47B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AF CALLER DUP5 DUP5 PUSH2 0x8AD JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C6 DUP5 DUP5 DUP5 PUSH2 0x9D1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x550 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x55D DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x8AD JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x4AF SWAP2 DUP6 SWAP1 PUSH2 0x59F SWAP1 DUP7 SWAP1 PUSH2 0xDEF JUMP JUMPDEST PUSH2 0x8AD JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x547 SWAP1 PUSH2 0xE07 JUMP JUMPDEST PUSH2 0x5D8 PUSH1 0x0 PUSH2 0xBAB JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x604 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x547 SWAP1 PUSH2 0xE07 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x41F SWAP1 PUSH2 0xD9E JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x6B9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x547 JUMP JUMPDEST PUSH2 0x6C6 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x8AD JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x706 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x71E JUMPI PUSH2 0x716 CALLER DUP5 DUP5 PUSH2 0x9D1 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x4B3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0xD SLOAD DUP5 PUSH2 0x730 SWAP2 SWAP1 PUSH2 0xE3C JUMP JUMPDEST PUSH2 0x73A SWAP2 SWAP1 PUSH2 0xE5B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH1 0xF SLOAD PUSH1 0xE SLOAD PUSH2 0x750 SWAP2 SWAP1 PUSH2 0xDEF JUMP JUMPDEST PUSH2 0x75A SWAP1 DUP7 PUSH2 0xE3C JUMP JUMPDEST PUSH2 0x764 SWAP2 SWAP1 PUSH2 0xE5B JUMP JUMPDEST SWAP1 POP PUSH2 0x77C CALLER PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0x9D1 JUMP JUMPDEST PUSH2 0x792 CALLER PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0x9D1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x79F DUP5 DUP8 PUSH2 0xE7D JUMP JUMPDEST PUSH2 0x7A9 SWAP2 SWAP1 PUSH2 0xE7D JUMP JUMPDEST SWAP1 POP PUSH2 0x7B6 CALLER DUP8 DUP4 PUSH2 0x9D1 JUMP JUMPDEST POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x547 SWAP1 PUSH2 0xE07 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x837 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x547 SWAP1 PUSH2 0xE07 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x89C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x547 JUMP JUMPDEST PUSH2 0x8A5 DUP2 PUSH2 0xBAB JUMP JUMPDEST POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x90F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x547 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x970 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x547 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA35 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x547 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA97 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x547 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xB0F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x547 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xB46 SWAP1 DUP5 SWAP1 PUSH2 0xDEF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xB92 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xBA5 DUP5 DUP5 DUP5 PUSH2 0xBFD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x7 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD DUP2 SWAP1 PUSH2 0xC2C DUP5 DUP4 PUSH2 0xE7D JUMP JUMPDEST PUSH2 0xC36 SWAP2 SWAP1 PUSH2 0xE3C JUMP JUMPDEST PUSH2 0xC40 TIMESTAMP DUP6 PUSH2 0xE3C JUMP JUMPDEST PUSH2 0xC4A SWAP2 SWAP1 PUSH2 0xDEF JUMP JUMPDEST PUSH2 0xC54 SWAP2 SWAP1 PUSH2 0xE5B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0xBA5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC9F JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xC83 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xCB1 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xCDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCFF DUP4 PUSH2 0xCC7 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD28 DUP3 PUSH2 0xCC7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD4D DUP5 PUSH2 0xCC7 JUMP JUMPDEST SWAP3 POP PUSH2 0xD5B PUSH1 0x20 DUP6 ADD PUSH2 0xCC7 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD87 DUP4 PUSH2 0xCC7 JUMP JUMPDEST SWAP2 POP PUSH2 0xD95 PUSH1 0x20 DUP5 ADD PUSH2 0xCC7 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xDB2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xDD3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xE02 JUMPI PUSH2 0xE02 PUSH2 0xDD9 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xE56 JUMPI PUSH2 0xE56 PUSH2 0xDD9 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xE78 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xE8F JUMPI PUSH2 0xE8F PUSH2 0xDD9 JUMP JUMPDEST POP SUB SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA SWAP16 LOG1 PC PUSH2 0x29CF 0xBE 0xC1 0xF8 0xCA 0xB0 0x26 EXTCODEHASH 0xAB 0xB7 OR 0xAF RETURNDATASIZE BYTE CREATE LT 0x4A NUMBER 0xC5 PUSH9 0x31C821ED8C64736F PUSH13 0x634300080B0033000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        265,
        5835
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "6": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "8": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "12": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "DUP1",
      "path": "7"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "REVERT",
      "path": "7"
    },
    "16": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "17": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "POP",
      "path": "7"
    },
    "18": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "21": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "LT",
      "path": "7"
    },
    "22": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1C4"
    },
    "25": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "26": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "CALLDATALOAD",
      "path": "7"
    },
    "29": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "SHR",
      "path": "7"
    },
    "32": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "DUP1",
      "path": "7"
    },
    "33": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x6E2B0E47"
    },
    "38": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "GT",
      "path": "7"
    },
    "39": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF9"
    },
    "42": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "43": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "DUP1",
      "path": "7"
    },
    "44": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xA457C2D7"
    },
    "49": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "GT",
      "path": "7"
    },
    "50": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x97"
    },
    "53": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "54": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "DUP1",
      "path": "7"
    },
    "55": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xDA6FA55C"
    },
    "60": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "GT",
      "path": "7"
    },
    "61": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x71"
    },
    "64": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "65": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "DUP1",
      "path": "7"
    },
    "66": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xDA6FA55C"
    },
    "71": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "EQ",
      "path": "7"
    },
    "72": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x398"
    },
    "75": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "76": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "DUP1",
      "path": "7"
    },
    "77": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xDBE66CA0"
    },
    "82": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "EQ",
      "path": "7"
    },
    "83": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3A1"
    },
    "86": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "87": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "DUP1",
      "path": "7"
    },
    "88": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xDD62ED3E"
    },
    "93": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "EQ",
      "path": "7"
    },
    "94": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3C4"
    },
    "97": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "98": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "DUP1",
      "path": "7"
    },
    "99": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xF2FDE38B"
    },
    "104": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "EQ",
      "path": "7"
    },
    "105": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3FD"
    },
    "108": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "109": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "DUP1",
      "path": "7"
    },
    "112": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "REVERT",
      "path": "7"
    },
    "113": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "114": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "DUP1",
      "path": "7"
    },
    "115": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xA457C2D7"
    },
    "120": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "EQ",
      "path": "7"
    },
    "121": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x35F"
    },
    "124": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "125": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "DUP1",
      "path": "7"
    },
    "126": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xA9059CBB"
    },
    "131": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "EQ",
      "path": "7"
    },
    "132": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x372"
    },
    "135": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "136": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "DUP1",
      "path": "7"
    },
    "137": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xBBEAA1F8"
    },
    "142": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "EQ",
      "path": "7"
    },
    "143": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x385"
    },
    "146": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "147": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "149": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "DUP1",
      "path": "7"
    },
    "150": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "REVERT",
      "path": "7"
    },
    "151": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "152": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "DUP1",
      "path": "7"
    },
    "153": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x78C1D245"
    },
    "158": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "GT",
      "path": "7"
    },
    "159": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD3"
    },
    "162": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "163": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "DUP1",
      "path": "7"
    },
    "164": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x78C1D245"
    },
    "169": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "EQ",
      "path": "7"
    },
    "170": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x320"
    },
    "173": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "174": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "DUP1",
      "path": "7"
    },
    "175": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x8DA5CB5B"
    },
    "180": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "EQ",
      "path": "7"
    },
    "181": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x333"
    },
    "184": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "185": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "DUP1",
      "path": "7"
    },
    "186": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x95D89B41"
    },
    "191": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "EQ",
      "path": "7"
    },
    "192": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x344"
    },
    "195": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "196": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "DUP1",
      "path": "7"
    },
    "197": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x99C76D56"
    },
    "202": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "EQ",
      "path": "7"
    },
    "203": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x34C"
    },
    "206": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "207": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "209": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "DUP1",
      "path": "7"
    },
    "210": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "REVERT",
      "path": "7"
    },
    "211": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "212": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "DUP1",
      "path": "7"
    },
    "213": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x6E2B0E47"
    },
    "218": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "EQ",
      "path": "7"
    },
    "219": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2E4"
    },
    "222": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "223": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "DUP1",
      "path": "7"
    },
    "224": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x70A08231"
    },
    "229": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "EQ",
      "path": "7"
    },
    "230": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2ED"
    },
    "233": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "234": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "DUP1",
      "path": "7"
    },
    "235": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x715018A6"
    },
    "240": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "EQ",
      "path": "7"
    },
    "241": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x316"
    },
    "244": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "245": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "247": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "DUP1",
      "path": "7"
    },
    "248": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "REVERT",
      "path": "7"
    },
    "249": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "250": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "DUP1",
      "path": "7"
    },
    "251": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x2FB47BE4"
    },
    "256": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "GT",
      "path": "7"
    },
    "257": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x166"
    },
    "260": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "261": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "DUP1",
      "path": "7"
    },
    "262": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x39509351"
    },
    "267": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "GT",
      "path": "7"
    },
    "268": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x140"
    },
    "271": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "272": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "DUP1",
      "path": "7"
    },
    "273": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x39509351"
    },
    "278": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "EQ",
      "path": "7"
    },
    "279": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2AF"
    },
    "282": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "283": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "DUP1",
      "path": "7"
    },
    "284": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x4FCD1285"
    },
    "289": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "EQ",
      "path": "7"
    },
    "290": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2C2"
    },
    "293": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "294": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "DUP1",
      "path": "7"
    },
    "295": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x502F91EC"
    },
    "300": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "EQ",
      "path": "7"
    },
    "301": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2CB"
    },
    "304": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "305": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "DUP1",
      "path": "7"
    },
    "306": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x6C9230DB"
    },
    "311": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "EQ",
      "path": "7"
    },
    "312": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2DE"
    },
    "315": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "316": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "318": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "DUP1",
      "path": "7"
    },
    "319": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "REVERT",
      "path": "7"
    },
    "320": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "321": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "DUP1",
      "path": "7"
    },
    "322": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x2FB47BE4"
    },
    "327": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "EQ",
      "path": "7"
    },
    "328": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x291"
    },
    "331": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "332": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "DUP1",
      "path": "7"
    },
    "333": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x313CE567"
    },
    "338": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "EQ",
      "path": "7"
    },
    "339": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x29A"
    },
    "342": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "343": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "DUP1",
      "path": "7"
    },
    "344": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x32A2C5D0"
    },
    "349": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "EQ",
      "path": "7"
    },
    "350": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2A9"
    },
    "353": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "354": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "356": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "DUP1",
      "path": "7"
    },
    "357": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "REVERT",
      "path": "7"
    },
    "358": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "359": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "DUP1",
      "path": "7"
    },
    "360": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x1497B01B"
    },
    "365": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "GT",
      "path": "7"
    },
    "366": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1A2"
    },
    "369": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "370": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "DUP1",
      "path": "7"
    },
    "371": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x1497B01B"
    },
    "376": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "EQ",
      "path": "7"
    },
    "377": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x235"
    },
    "380": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "381": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "DUP1",
      "path": "7"
    },
    "382": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x18160DDD"
    },
    "387": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "EQ",
      "path": "7"
    },
    "388": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x263"
    },
    "391": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "392": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "DUP1",
      "path": "7"
    },
    "393": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x1BA7F00F"
    },
    "398": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "EQ",
      "path": "7"
    },
    "399": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x26B"
    },
    "402": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "403": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "DUP1",
      "path": "7"
    },
    "404": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x23B872DD"
    },
    "409": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "EQ",
      "path": "7"
    },
    "410": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x27E"
    },
    "413": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "414": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "416": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "DUP1",
      "path": "7"
    },
    "417": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "REVERT",
      "path": "7"
    },
    "418": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "419": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "DUP1",
      "path": "7"
    },
    "420": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x6FDDE03"
    },
    "425": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "EQ",
      "path": "7"
    },
    "426": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1C9"
    },
    "429": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "430": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "DUP1",
      "path": "7"
    },
    "431": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x95EA7B3"
    },
    "436": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "EQ",
      "path": "7"
    },
    "437": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1E7"
    },
    "440": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "441": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "DUP1",
      "path": "7"
    },
    "442": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xF1FB037"
    },
    "447": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "EQ",
      "path": "7"
    },
    "448": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x20A"
    },
    "451": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "452": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "453": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "455": {
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "DUP1",
      "path": "7"
    },
    "456": {
      "first_revert": true,
      "fn": null,
      "offset": [
        265,
        5835
      ],
      "op": "REVERT",
      "path": "7"
    },
    "457": {
      "fn": "ERC20.name",
      "offset": [
        2141,
        2239
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "458": {
      "fn": "ERC20.name",
      "offset": [
        2141,
        2239
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D1"
    },
    "461": {
      "fn": "ERC20.name",
      "offset": [
        2141,
        2239
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x410"
    },
    "464": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2141,
        2239
      ],
      "op": "JUMP",
      "path": "1"
    },
    "465": {
      "fn": "ERC20.name",
      "offset": [
        2141,
        2239
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "466": {
      "fn": "ERC20.name",
      "offset": [
        2141,
        2239
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "468": {
      "fn": "ERC20.name",
      "offset": [
        2141,
        2239
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "469": {
      "fn": "ERC20.name",
      "offset": [
        2141,
        2239
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1DE"
    },
    "472": {
      "fn": "ERC20.name",
      "offset": [
        2141,
        2239
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "473": {
      "fn": "ERC20.name",
      "offset": [
        2141,
        2239
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "474": {
      "fn": "ERC20.name",
      "offset": [
        2141,
        2239
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC72"
    },
    "477": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2141,
        2239
      ],
      "op": "JUMP",
      "path": "1"
    },
    "478": {
      "fn": "ERC20.name",
      "offset": [
        2141,
        2239
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "479": {
      "fn": "ERC20.name",
      "offset": [
        2141,
        2239
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "481": {
      "fn": "ERC20.name",
      "offset": [
        2141,
        2239
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "482": {
      "fn": "ERC20.name",
      "offset": [
        2141,
        2239
      ],
      "op": "DUP1",
      "path": "1"
    },
    "483": {
      "fn": "ERC20.name",
      "offset": [
        2141,
        2239
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "484": {
      "fn": "ERC20.name",
      "offset": [
        2141,
        2239
      ],
      "op": "SUB",
      "path": "1"
    },
    "485": {
      "fn": "ERC20.name",
      "offset": [
        2141,
        2239
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "486": {
      "fn": "ERC20.name",
      "offset": [
        2141,
        2239
      ],
      "op": "RETURN",
      "path": "1"
    },
    "487": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "488": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1FA"
    },
    "491": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F5"
    },
    "494": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "495": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "497": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCE3"
    },
    "500": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4238,
        4404
      ],
      "op": "JUMP",
      "path": "1"
    },
    "501": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "502": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4A2"
    },
    "505": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4238,
        4404
      ],
      "op": "JUMP",
      "path": "1"
    },
    "506": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "507": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "509": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "510": {
      "op": "SWAP1"
    },
    "511": {
      "op": "ISZERO"
    },
    "512": {
      "op": "ISZERO"
    },
    "513": {
      "op": "DUP2"
    },
    "514": {
      "op": "MSTORE"
    },
    "515": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "517": {
      "op": "ADD"
    },
    "518": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1DE"
    },
    "521": {
      "op": "JUMP"
    },
    "522": {
      "offset": [
        894,
        931
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "523": {
      "fn": "ERC20.approve",
      "offset": [
        894,
        931
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x9"
    },
    "525": {
      "fn": "ERC20.approve",
      "offset": [
        894,
        931
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "526": {
      "fn": "ERC20.approve",
      "offset": [
        894,
        931
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x21D"
    },
    "529": {
      "fn": "ERC20.approve",
      "offset": [
        894,
        931
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "530": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "532": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "534": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "536": {
      "op": "SHL"
    },
    "537": {
      "op": "SUB"
    },
    "538": {
      "offset": [
        894,
        931
      ],
      "op": "AND",
      "path": "7"
    },
    "539": {
      "fn": "ERC20.approve",
      "offset": [
        894,
        931
      ],
      "op": "DUP2",
      "path": "7"
    },
    "540": {
      "fn": "ERC20.approve",
      "offset": [
        894,
        931
      ],
      "op": "JUMP",
      "path": "7"
    },
    "541": {
      "fn": "ERC20.approve",
      "offset": [
        894,
        931
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "542": {
      "fn": "ERC20.approve",
      "offset": [
        894,
        931
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "544": {
      "fn": "ERC20.approve",
      "offset": [
        894,
        931
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "545": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "547": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "549": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "551": {
      "op": "SHL"
    },
    "552": {
      "op": "SUB"
    },
    "553": {
      "op": "SWAP1"
    },
    "554": {
      "op": "SWAP2"
    },
    "555": {
      "op": "AND"
    },
    "556": {
      "op": "DUP2"
    },
    "557": {
      "op": "MSTORE"
    },
    "558": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "560": {
      "op": "ADD"
    },
    "561": {
      "offset": [
        894,
        931
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1DE"
    },
    "564": {
      "op": "JUMP"
    },
    "565": {
      "offset": [
        639,
        692
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "566": {
      "fn": "ERC20.approve",
      "offset": [
        639,
        692
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x255"
    },
    "569": {
      "fn": "ERC20.approve",
      "offset": [
        639,
        692
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x243"
    },
    "572": {
      "fn": "ERC20.approve",
      "offset": [
        639,
        692
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "573": {
      "fn": "ERC20.approve",
      "offset": [
        639,
        692
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "575": {
      "fn": "ERC20.approve",
      "offset": [
        639,
        692
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD0D"
    },
    "578": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        639,
        692
      ],
      "op": "JUMP",
      "path": "7"
    },
    "579": {
      "fn": "ERC20.approve",
      "offset": [
        639,
        692
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "580": {
      "fn": "ERC20.approve",
      "offset": [
        639,
        692
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "582": {
      "fn": "ERC20.approve",
      "offset": [
        639,
        692
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "584": {
      "fn": "ERC20.approve",
      "offset": [
        639,
        692
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "585": {
      "fn": "ERC20.approve",
      "offset": [
        639,
        692
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "587": {
      "fn": "ERC20.approve",
      "offset": [
        639,
        692
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "588": {
      "fn": "ERC20.approve",
      "offset": [
        639,
        692
      ],
      "op": "DUP2",
      "path": "7"
    },
    "589": {
      "fn": "ERC20.approve",
      "offset": [
        639,
        692
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "590": {
      "fn": "ERC20.approve",
      "offset": [
        639,
        692
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "592": {
      "fn": "ERC20.approve",
      "offset": [
        639,
        692
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "593": {
      "fn": "ERC20.approve",
      "offset": [
        639,
        692
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "594": {
      "fn": "ERC20.approve",
      "offset": [
        639,
        692
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "595": {
      "fn": "ERC20.approve",
      "offset": [
        639,
        692
      ],
      "op": "DUP2",
      "path": "7"
    },
    "596": {
      "fn": "ERC20.approve",
      "offset": [
        639,
        692
      ],
      "op": "JUMP",
      "path": "7"
    },
    "597": {
      "fn": "ERC20.approve",
      "offset": [
        639,
        692
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "598": {
      "fn": "ERC20.approve",
      "offset": [
        639,
        692
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "600": {
      "fn": "ERC20.approve",
      "offset": [
        639,
        692
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "601": {
      "op": "SWAP1"
    },
    "602": {
      "op": "DUP2"
    },
    "603": {
      "op": "MSTORE"
    },
    "604": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "606": {
      "op": "ADD"
    },
    "607": {
      "offset": [
        639,
        692
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1DE"
    },
    "610": {
      "op": "JUMP"
    },
    "611": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3229,
        3335
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "612": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3316,
        3328
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 0,
      "value": "0x2"
    },
    "614": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3316,
        3328
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "615": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3229,
        3335
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x255"
    },
    "618": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3229,
        3335
      ],
      "op": "JUMP",
      "path": "1"
    },
    "619": {
      "offset": [
        777,
        814
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "620": {
      "fn": "ERC20.totalSupply",
      "offset": [
        777,
        814
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "622": {
      "fn": "ERC20.totalSupply",
      "offset": [
        777,
        814
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "623": {
      "fn": "ERC20.totalSupply",
      "offset": [
        777,
        814
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x21D"
    },
    "626": {
      "fn": "ERC20.totalSupply",
      "offset": [
        777,
        814
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "627": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "629": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "631": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "633": {
      "op": "SHL"
    },
    "634": {
      "op": "SUB"
    },
    "635": {
      "offset": [
        777,
        814
      ],
      "op": "AND",
      "path": "7"
    },
    "636": {
      "fn": "ERC20.totalSupply",
      "offset": [
        777,
        814
      ],
      "op": "DUP2",
      "path": "7"
    },
    "637": {
      "fn": "ERC20.totalSupply",
      "offset": [
        777,
        814
      ],
      "op": "JUMP",
      "path": "7"
    },
    "638": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4871,
        5349
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "639": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4871,
        5349
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1FA"
    },
    "642": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4871,
        5349
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x28C"
    },
    "645": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4871,
        5349
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "646": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4871,
        5349
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "648": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4871,
        5349
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD2F"
    },
    "651": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4871,
        5349
      ],
      "op": "JUMP",
      "path": "1"
    },
    "652": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4871,
        5349
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "653": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4871,
        5349
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4B9"
    },
    "656": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4871,
        5349
      ],
      "op": "JUMP",
      "path": "1"
    },
    "657": {
      "offset": [
        1253,
        1284
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "658": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1253,
        1284
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x255"
    },
    "661": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1253,
        1284
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xC"
    },
    "663": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1253,
        1284
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "664": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1253,
        1284
      ],
      "op": "DUP2",
      "path": "7"
    },
    "665": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1253,
        1284
      ],
      "op": "JUMP",
      "path": "7"
    },
    "666": {
      "fn": "ERC20.decimals",
      "offset": [
        3078,
        3169
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "667": {
      "fn": "ERC20.decimals",
      "offset": [
        3078,
        3169
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "669": {
      "fn": "ERC20.decimals",
      "offset": [
        3078,
        3169
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "670": {
      "fn": "ERC20.decimals",
      "offset": [
        3160,
        3162
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 1,
      "value": "0x12"
    },
    "672": {
      "op": "DUP2"
    },
    "673": {
      "op": "MSTORE"
    },
    "674": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "676": {
      "op": "ADD"
    },
    "677": {
      "fn": "ERC20.decimals",
      "offset": [
        3078,
        3169
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1DE"
    },
    "680": {
      "op": "JUMP"
    },
    "681": {
      "fn": "ChainEstateToken.getContractAddress",
      "offset": [
        3139,
        3237
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "682": {
      "fn": "ChainEstateToken.getContractAddress",
      "offset": [
        3224,
        3228
      ],
      "op": "ADDRESS",
      "path": "7",
      "statement": 2
    },
    "683": {
      "fn": "ChainEstateToken.getContractAddress",
      "offset": [
        3139,
        3237
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x21D"
    },
    "686": {
      "fn": "ChainEstateToken.getContractAddress",
      "offset": [
        3139,
        3237
      ],
      "op": "JUMP",
      "path": "7"
    },
    "687": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5744,
        5956
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "688": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5744,
        5956
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1FA"
    },
    "691": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5744,
        5956
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2BD"
    },
    "694": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5744,
        5956
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "695": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5744,
        5956
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "697": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5744,
        5956
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCE3"
    },
    "700": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5744,
        5956
      ],
      "op": "JUMP",
      "path": "1"
    },
    "701": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5744,
        5956
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "702": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5744,
        5956
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x568"
    },
    "705": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5744,
        5956
      ],
      "op": "JUMP",
      "path": "1"
    },
    "706": {
      "offset": [
        1463,
        1501
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "707": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        1463,
        1501
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x255"
    },
    "710": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        1463,
        1501
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xE"
    },
    "712": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        1463,
        1501
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "713": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        1463,
        1501
      ],
      "op": "DUP2",
      "path": "7"
    },
    "714": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        1463,
        1501
      ],
      "op": "JUMP",
      "path": "7"
    },
    "715": {
      "offset": [
        1022,
        1060
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "716": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        1022,
        1060
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "718": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        1022,
        1060
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "719": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        1022,
        1060
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x21D"
    },
    "722": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        1022,
        1060
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "723": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "725": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "727": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "729": {
      "op": "SHL"
    },
    "730": {
      "op": "SUB"
    },
    "731": {
      "offset": [
        1022,
        1060
      ],
      "op": "AND",
      "path": "7"
    },
    "732": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        1022,
        1060
      ],
      "op": "DUP2",
      "path": "7"
    },
    "733": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        1022,
        1060
      ],
      "op": "JUMP",
      "path": "7"
    },
    "734": {
      "fn": "ChainEstateToken.getCurrentTimestamp",
      "offset": [
        3494,
        3596
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "735": {
      "fn": "ChainEstateToken.getCurrentTimestamp",
      "offset": [
        3573,
        3588
      ],
      "op": "TIMESTAMP",
      "path": "7",
      "statement": 3
    },
    "736": {
      "fn": "ChainEstateToken.getCurrentTimestamp",
      "offset": [
        3494,
        3596
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x255"
    },
    "739": {
      "fn": "ChainEstateToken.getCurrentTimestamp",
      "offset": [
        3494,
        3596
      ],
      "op": "JUMP",
      "path": "7"
    },
    "740": {
      "offset": [
        1347,
        1397
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "741": {
      "fn": "ChainEstateToken.getCurrentTimestamp",
      "offset": [
        1347,
        1397
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x255"
    },
    "744": {
      "fn": "ChainEstateToken.getCurrentTimestamp",
      "offset": [
        1347,
        1397
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xD"
    },
    "746": {
      "fn": "ChainEstateToken.getCurrentTimestamp",
      "offset": [
        1347,
        1397
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "747": {
      "fn": "ChainEstateToken.getCurrentTimestamp",
      "offset": [
        1347,
        1397
      ],
      "op": "DUP2",
      "path": "7"
    },
    "748": {
      "fn": "ChainEstateToken.getCurrentTimestamp",
      "offset": [
        1347,
        1397
      ],
      "op": "JUMP",
      "path": "7"
    },
    "749": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3393,
        3518
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "750": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3393,
        3518
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x255"
    },
    "753": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3393,
        3518
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2FB"
    },
    "756": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3393,
        3518
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "757": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3393,
        3518
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "759": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3393,
        3518
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD0D"
    },
    "762": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        3393,
        3518
      ],
      "op": "JUMP",
      "path": "1"
    },
    "763": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3393,
        3518
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "764": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "768": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "770": {
      "op": "SHL"
    },
    "771": {
      "op": "SUB"
    },
    "772": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "AND",
      "path": "1",
      "statement": 4
    },
    "773": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3467,
        3474
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "775": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "776": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "DUP2",
      "path": "1"
    },
    "777": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "778": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "780": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "DUP2",
      "path": "1"
    },
    "781": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "782": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "783": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "785": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "786": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "787": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "788": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "789": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3393,
        3518
      ],
      "op": "JUMP",
      "path": "1"
    },
    "790": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "791": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31E"
    },
    "794": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5A4"
    },
    "797": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "798": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "799": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "STOP",
      "path": "0"
    },
    "800": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "offset": [
        3378,
        3486
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "801": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "offset": [
        3378,
        3486
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x31E"
    },
    "804": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "offset": [
        3378,
        3486
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x32E"
    },
    "807": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "offset": [
        3378,
        3486
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "808": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "offset": [
        3378,
        3486
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "810": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "offset": [
        3378,
        3486
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD0D"
    },
    "813": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "jump": "i",
      "offset": [
        3378,
        3486
      ],
      "op": "JUMP",
      "path": "7"
    },
    "814": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "offset": [
        3378,
        3486
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "815": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "offset": [
        3378,
        3486
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x5DA"
    },
    "818": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "jump": "i",
      "offset": [
        3378,
        3486
      ],
      "op": "JUMP",
      "path": "7"
    },
    "819": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "820": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 5,
      "value": "0x5"
    },
    "822": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "823": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "825": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "827": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "829": {
      "op": "SHL"
    },
    "830": {
      "op": "SUB"
    },
    "831": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "832": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21D"
    },
    "835": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "836": {
      "fn": "ERC20.symbol",
      "offset": [
        2352,
        2454
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "837": {
      "fn": "ERC20.symbol",
      "offset": [
        2352,
        2454
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D1"
    },
    "840": {
      "fn": "ERC20.symbol",
      "offset": [
        2352,
        2454
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x628"
    },
    "843": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2352,
        2454
      ],
      "op": "JUMP",
      "path": "1"
    },
    "844": {
      "offset": [
        1139,
        1185
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "845": {
      "fn": "ERC20.symbol",
      "offset": [
        1139,
        1185
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xB"
    },
    "847": {
      "fn": "ERC20.symbol",
      "offset": [
        1139,
        1185
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "848": {
      "fn": "ERC20.symbol",
      "offset": [
        1139,
        1185
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x21D"
    },
    "851": {
      "fn": "ERC20.symbol",
      "offset": [
        1139,
        1185
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "852": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "856": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "858": {
      "op": "SHL"
    },
    "859": {
      "op": "SUB"
    },
    "860": {
      "offset": [
        1139,
        1185
      ],
      "op": "AND",
      "path": "7"
    },
    "861": {
      "fn": "ERC20.symbol",
      "offset": [
        1139,
        1185
      ],
      "op": "DUP2",
      "path": "7"
    },
    "862": {
      "fn": "ERC20.symbol",
      "offset": [
        1139,
        1185
      ],
      "op": "JUMP",
      "path": "7"
    },
    "863": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6443,
        6848
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "864": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6443,
        6848
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1FA"
    },
    "867": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6443,
        6848
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x36D"
    },
    "870": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6443,
        6848
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "871": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6443,
        6848
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "873": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6443,
        6848
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCE3"
    },
    "876": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6443,
        6848
      ],
      "op": "JUMP",
      "path": "1"
    },
    "877": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6443,
        6848
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "878": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6443,
        6848
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x637"
    },
    "881": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6443,
        6848
      ],
      "op": "JUMP",
      "path": "1"
    },
    "882": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4140,
        5216
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "883": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4140,
        5216
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1FA"
    },
    "886": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4140,
        5216
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x380"
    },
    "889": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4140,
        5216
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "890": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4140,
        5216
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "892": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4140,
        5216
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xCE3"
    },
    "895": {
      "fn": "ChainEstateToken.transfer",
      "jump": "i",
      "offset": [
        4140,
        5216
      ],
      "op": "JUMP",
      "path": "7"
    },
    "896": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4140,
        5216
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "897": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4140,
        5216
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6D0"
    },
    "900": {
      "fn": "ChainEstateToken.transfer",
      "jump": "i",
      "offset": [
        4140,
        5216
      ],
      "op": "JUMP",
      "path": "7"
    },
    "901": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        3756,
        3864
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "902": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        3756,
        3864
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x31E"
    },
    "905": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        3756,
        3864
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x393"
    },
    "908": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        3756,
        3864
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "909": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        3756,
        3864
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "911": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        3756,
        3864
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD0D"
    },
    "914": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "jump": "i",
      "offset": [
        3756,
        3864
      ],
      "op": "JUMP",
      "path": "7"
    },
    "915": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        3756,
        3864
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "916": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        3756,
        3864
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x7C2"
    },
    "919": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "jump": "i",
      "offset": [
        3756,
        3864
      ],
      "op": "JUMP",
      "path": "7"
    },
    "920": {
      "offset": [
        1562,
        1600
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "921": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        1562,
        1600
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x255"
    },
    "924": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        1562,
        1600
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xF"
    },
    "926": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        1562,
        1600
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "927": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        1562,
        1600
      ],
      "op": "DUP2",
      "path": "7"
    },
    "928": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        1562,
        1600
      ],
      "op": "JUMP",
      "path": "7"
    },
    "929": {
      "offset": [
        455,
        504
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "930": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        455,
        504
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1FA"
    },
    "933": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        455,
        504
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3AF"
    },
    "936": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        455,
        504
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "937": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        455,
        504
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "939": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        455,
        504
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD0D"
    },
    "942": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "jump": "i",
      "offset": [
        455,
        504
      ],
      "op": "JUMP",
      "path": "7"
    },
    "943": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        455,
        504
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "944": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        455,
        504
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "946": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        455,
        504
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "948": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        455,
        504
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "949": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        455,
        504
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "951": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        455,
        504
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "952": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        455,
        504
      ],
      "op": "DUP2",
      "path": "7"
    },
    "953": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        455,
        504
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "954": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        455,
        504
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "956": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        455,
        504
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "957": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        455,
        504
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "958": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        455,
        504
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "959": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        455,
        504
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "961": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        455,
        504
      ],
      "op": "AND",
      "path": "7"
    },
    "962": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        455,
        504
      ],
      "op": "DUP2",
      "path": "7"
    },
    "963": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        455,
        504
      ],
      "op": "JUMP",
      "path": "7"
    },
    "964": {
      "fn": "ERC20.allowance",
      "offset": [
        3951,
        4100
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "965": {
      "fn": "ERC20.allowance",
      "offset": [
        3951,
        4100
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x255"
    },
    "968": {
      "fn": "ERC20.allowance",
      "offset": [
        3951,
        4100
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3D2"
    },
    "971": {
      "fn": "ERC20.allowance",
      "offset": [
        3951,
        4100
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "972": {
      "fn": "ERC20.allowance",
      "offset": [
        3951,
        4100
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "974": {
      "fn": "ERC20.allowance",
      "offset": [
        3951,
        4100
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD6B"
    },
    "977": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        3951,
        4100
      ],
      "op": "JUMP",
      "path": "1"
    },
    "978": {
      "fn": "ERC20.allowance",
      "offset": [
        3951,
        4100
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "981": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "983": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "985": {
      "op": "SHL"
    },
    "986": {
      "op": "SUB"
    },
    "987": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4084
      ],
      "op": "SWAP2",
      "path": "1",
      "statement": 6
    },
    "988": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4084
      ],
      "op": "DUP3",
      "path": "1"
    },
    "989": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4084
      ],
      "op": "AND",
      "path": "1"
    },
    "990": {
      "fn": "ERC20.allowance",
      "offset": [
        4040,
        4047
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "992": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4084
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "993": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4084
      ],
      "op": "DUP2",
      "path": "1"
    },
    "994": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4084
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "995": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4077
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "997": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4084
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "999": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4084
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1000": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4084
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1001": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4084
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1002": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4084
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1004": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4084
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1005": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4084
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1006": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4084
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1007": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4093
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1008": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4093
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1009": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4093
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "1010": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4093
      ],
      "op": "AND",
      "path": "1"
    },
    "1011": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4093
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1012": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4093
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1013": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4093
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1014": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4093
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1015": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4093
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1016": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4093
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1017": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4093
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1018": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4093
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1019": {
      "fn": "ERC20.allowance",
      "offset": [
        4066,
        4093
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1020": {
      "fn": "ERC20.allowance",
      "offset": [
        3951,
        4100
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1021": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1022": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31E"
    },
    "1025": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x40B"
    },
    "1028": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1029": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1031": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD0D"
    },
    "1034": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1035": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1036": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x80D"
    },
    "1039": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1040": {
      "fn": "ERC20.name",
      "offset": [
        2141,
        2239
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1041": {
      "fn": "ERC20.name",
      "offset": [
        2195,
        2208
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "1043": {
      "fn": "ERC20.name",
      "offset": [
        2227,
        2232
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 7,
      "value": "0x3"
    },
    "1045": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1046": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1047": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x41F"
    },
    "1050": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1051": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD9E"
    },
    "1054": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2220,
        2232
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1055": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1056": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1057": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1059": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "ADD",
      "path": "1"
    },
    "1060": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1062": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1063": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1064": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DIV",
      "path": "1"
    },
    "1065": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "MUL",
      "path": "1"
    },
    "1066": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1068": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "ADD",
      "path": "1"
    },
    "1069": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1071": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1072": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1073": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1074": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "ADD",
      "path": "1"
    },
    "1075": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1077": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1078": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1079": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1080": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1081": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1082": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1083": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1084": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1085": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1087": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "ADD",
      "path": "1"
    },
    "1088": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1089": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1090": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1091": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x44B"
    },
    "1094": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1095": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD9E"
    },
    "1098": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2220,
        2232
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1099": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1100": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1101": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1102": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x498"
    },
    "1105": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1106": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1107": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1109": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "LT",
      "path": "1"
    },
    "1110": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x46D"
    },
    "1113": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1114": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "1117": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1118": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1119": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1120": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DIV",
      "path": "1"
    },
    "1121": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "MUL",
      "path": "1"
    },
    "1122": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1123": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1124": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1125": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1127": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "ADD",
      "path": "1"
    },
    "1128": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1129": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x498"
    },
    "1132": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1133": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1134": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1135": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "ADD",
      "path": "1"
    },
    "1136": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1137": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1138": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1140": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1141": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1143": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1145": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1146": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1147": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1148": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1149": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1150": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1151": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1152": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1153": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1155": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "ADD",
      "path": "1"
    },
    "1156": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1157": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1159": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "ADD",
      "path": "1"
    },
    "1160": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1161": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1162": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "GT",
      "path": "1"
    },
    "1163": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x47B"
    },
    "1166": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1167": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1168": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1169": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "SUB",
      "path": "1"
    },
    "1170": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1172": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "AND",
      "path": "1"
    },
    "1173": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1174": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "ADD",
      "path": "1"
    },
    "1175": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1176": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1177": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "POP",
      "path": "1"
    },
    "1178": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "POP",
      "path": "1"
    },
    "1179": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "POP",
      "path": "1"
    },
    "1180": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "POP",
      "path": "1"
    },
    "1181": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "POP",
      "path": "1"
    },
    "1182": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1183": {
      "fn": "ERC20.name",
      "offset": [
        2220,
        2232
      ],
      "op": "POP",
      "path": "1"
    },
    "1184": {
      "fn": "ERC20.name",
      "offset": [
        2141,
        2239
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1185": {
      "fn": "ERC20.name",
      "jump": "o",
      "offset": [
        2141,
        2239
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1186": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1187": {
      "fn": "ERC20.approve",
      "offset": [
        4321,
        4325
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1189": {
      "fn": "ERC20.approve",
      "offset": [
        4337,
        4376
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 8,
      "value": "0x4AF"
    },
    "1192": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4",
      "statement": 9
    },
    "1193": {
      "fn": "ERC20.approve",
      "offset": [
        4360,
        4367
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1194": {
      "fn": "ERC20.approve",
      "offset": [
        4369,
        4375
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1195": {
      "fn": "ERC20.approve",
      "offset": [
        4337,
        4345
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8AD"
    },
    "1198": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4337,
        4376
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1199": {
      "fn": "ERC20.approve",
      "offset": [
        4337,
        4376
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1200": {
      "op": "POP"
    },
    "1201": {
      "fn": "ERC20.approve",
      "offset": [
        4393,
        4397
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 10,
      "value": "0x1"
    },
    "1203": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1204": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1205": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1206": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "POP",
      "path": "1"
    },
    "1207": {
      "fn": "ERC20.approve",
      "offset": [
        4238,
        4404
      ],
      "op": "POP",
      "path": "1"
    },
    "1208": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        4238,
        4404
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1209": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4871,
        5349
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1210": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5007,
        5011
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1212": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5023,
        5059
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 11,
      "value": "0x4C6"
    },
    "1215": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5033,
        5039
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1216": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5041,
        5050
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1217": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5052,
        5058
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1218": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5023,
        5032
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9D1"
    },
    "1221": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5023,
        5059
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1222": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5023,
        5059
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1223": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1225": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1227": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1229": {
      "op": "SHL"
    },
    "1230": {
      "op": "SUB"
    },
    "1231": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5097,
        5116
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1232": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5097,
        5116
      ],
      "op": "AND",
      "path": "1"
    },
    "1233": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5070,
        5094
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1235": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5097,
        5116
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1236": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5097,
        5116
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1237": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5097,
        5116
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1238": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5097,
        5108
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1240": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5097,
        5116
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1242": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5097,
        5116
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1243": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5097,
        5116
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1244": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5097,
        5116
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1245": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5097,
        5116
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1247": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5097,
        5116
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1248": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5097,
        5116
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1249": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5097,
        5116
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1250": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1251": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5097,
        5130
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1252": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5097,
        5130
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1253": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5097,
        5130
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1254": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5097,
        5130
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1255": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5097,
        5130
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1256": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5097,
        5130
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1257": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5097,
        5130
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1258": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5097,
        5130
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1259": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5148,
        5174
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 12
    },
    "1260": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5148,
        5174
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1261": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5148,
        5174
      ],
      "op": "LT",
      "path": "1"
    },
    "1262": {
      "branch": 48,
      "fn": "ERC20.transferFrom",
      "offset": [
        5148,
        5174
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1263": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5140,
        5219
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x550"
    },
    "1266": {
      "branch": 48,
      "fn": "ERC20.transferFrom",
      "offset": [
        5140,
        5219
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1267": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5140,
        5219
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1269": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5140,
        5219
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1270": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1274": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1276": {
      "op": "SHL"
    },
    "1277": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5140,
        5219
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1278": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5140,
        5219
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1279": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1281": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5140,
        5219
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1283": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5140,
        5219
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1284": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5140,
        5219
      ],
      "op": "ADD",
      "path": "1"
    },
    "1285": {
      "op": "MSTORE"
    },
    "1286": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "1288": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1290": {
      "op": "DUP3"
    },
    "1291": {
      "op": "ADD"
    },
    "1292": {
      "op": "MSTORE"
    },
    "1293": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732061"
    },
    "1326": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1328": {
      "op": "DUP3"
    },
    "1329": {
      "op": "ADD"
    },
    "1330": {
      "op": "MSTORE"
    },
    "1331": {
      "op": "PUSH8",
      "value": "0x6C6C6F77616E6365"
    },
    "1340": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1342": {
      "op": "SHL"
    },
    "1343": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1345": {
      "op": "DUP3"
    },
    "1346": {
      "op": "ADD"
    },
    "1347": {
      "op": "MSTORE"
    },
    "1348": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1350": {
      "op": "ADD"
    },
    "1351": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5140,
        5219
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1352": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5140,
        5219
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1354": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5140,
        5219
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1355": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5140,
        5219
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1356": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5140,
        5219
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1357": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5140,
        5219
      ],
      "op": "SUB",
      "path": "1"
    },
    "1358": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5140,
        5219
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1359": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5140,
        5219
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "1"
    },
    "1360": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5140,
        5219
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1361": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5253,
        5310
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 13,
      "value": "0x55D"
    },
    "1364": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5262,
        5268
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1365": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1366": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5303,
        5309
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1367": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5284,
        5300
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1368": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5284,
        5309
      ],
      "op": "SUB",
      "path": "1"
    },
    "1369": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5253,
        5261
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8AD"
    },
    "1372": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5253,
        5310
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1373": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5253,
        5310
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1374": {
      "op": "POP"
    },
    "1375": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5338,
        5342
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 14,
      "value": "0x1"
    },
    "1377": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5338,
        5342
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "1378": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4871,
        5349
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1379": {
      "op": "POP"
    },
    "1380": {
      "op": "POP"
    },
    "1381": {
      "op": "POP"
    },
    "1382": {
      "op": "POP"
    },
    "1383": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        4871,
        5349
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1384": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5744,
        5956
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1385": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1386": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5832,
        5836
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1388": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5905
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 15
    },
    "1389": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5905
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1390": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5905
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1391": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5891
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1393": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5905
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1395": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5905
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1396": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5905
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1397": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5905
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1398": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5905
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1400": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5905
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1401": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5905
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1402": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5905
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1403": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1405": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1407": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1409": {
      "op": "SHL"
    },
    "1410": {
      "op": "SUB"
    },
    "1411": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5914
      ],
      "op": "DUP8",
      "path": "1"
    },
    "1412": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5914
      ],
      "op": "AND",
      "path": "1"
    },
    "1413": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5914
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1414": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5914
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1415": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5914
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1416": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5914
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1417": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5914
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1418": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5914
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1419": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5914
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1420": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5914
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1421": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5832,
        5836
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1422": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5832,
        5836
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1423": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        5928
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4AF"
    },
    "1426": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        5928
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1427": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5871,
        5878
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1428": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5871,
        5878
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1429": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5927
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x59F"
    },
    "1432": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5927
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1433": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5917,
        5927
      ],
      "op": "DUP7",
      "path": "1"
    },
    "1434": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5917,
        5927
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1435": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5927
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDEF"
    },
    "1438": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5880,
        5927
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1439": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5880,
        5927
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1440": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        5856
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8AD"
    },
    "1443": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5848,
        5928
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1444": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1445": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1447": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1448": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1450": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1452": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1454": {
      "op": "SHL"
    },
    "1455": {
      "op": "SUB"
    },
    "1456": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1457": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1458": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "1459": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5CE"
    },
    "1462": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1463": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1465": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1466": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1470": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1472": {
      "op": "SHL"
    },
    "1473": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1474": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1475": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1477": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "1478": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x547"
    },
    "1481": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1482": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE07"
    },
    "1485": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1486": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1487": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 16,
      "value": "0x5D8"
    },
    "1490": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1492": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBAB"
    },
    "1495": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1496": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1497": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1498": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "offset": [
        3378,
        3486
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1499": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1501": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1502": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1504": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1506": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1508": {
      "op": "SHL"
    },
    "1509": {
      "op": "SUB"
    },
    "1510": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1511": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1512": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "1513": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x604"
    },
    "1516": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1517": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1519": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1520": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1524": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1526": {
      "op": "SHL"
    },
    "1527": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1528": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1529": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1531": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "1532": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x547"
    },
    "1535": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1536": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE07"
    },
    "1539": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1540": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1541": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1543": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1545": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1547": {
      "op": "SHL"
    },
    "1548": {
      "op": "SUB"
    },
    "1549": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "offset": [
        3449,
        3471
      ],
      "op": "AND",
      "path": "7",
      "statement": 17
    },
    "1550": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "offset": [
        3449,
        3471
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1552": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "offset": [
        3449,
        3471
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1553": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "offset": [
        3449,
        3471
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1554": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "offset": [
        3449,
        3471
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1555": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "offset": [
        3449,
        3465
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "1557": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "offset": [
        3449,
        3471
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1559": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "offset": [
        3449,
        3471
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1560": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "offset": [
        3449,
        3471
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1562": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "offset": [
        3449,
        3471
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1563": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "offset": [
        3449,
        3471
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1564": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "offset": [
        3449,
        3478
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1565": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "offset": [
        3449,
        3478
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1566": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1568": {
      "op": "NOT"
    },
    "1569": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "offset": [
        3449,
        3478
      ],
      "op": "AND",
      "path": "7"
    },
    "1570": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "offset": [
        3474,
        3478
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "1572": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "offset": [
        3449,
        3478
      ],
      "op": "OR",
      "path": "7"
    },
    "1573": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "offset": [
        3449,
        3478
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1574": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "offset": [
        3449,
        3478
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "1575": {
      "fn": "ChainEstateToken.excludeUserFromFees",
      "jump": "o",
      "offset": [
        3378,
        3486
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1576": {
      "fn": "ERC20.symbol",
      "offset": [
        2352,
        2454
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1577": {
      "fn": "ERC20.symbol",
      "offset": [
        2408,
        2421
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "1579": {
      "fn": "ERC20.symbol",
      "offset": [
        2440,
        2447
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 18,
      "value": "0x4"
    },
    "1581": {
      "fn": "ERC20.symbol",
      "offset": [
        2433,
        2447
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1582": {
      "fn": "ERC20.symbol",
      "offset": [
        2433,
        2447
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1583": {
      "fn": "ERC20.symbol",
      "offset": [
        2433,
        2447
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x41F"
    },
    "1586": {
      "fn": "ERC20.symbol",
      "offset": [
        2433,
        2447
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1587": {
      "fn": "ERC20.symbol",
      "offset": [
        2433,
        2447
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD9E"
    },
    "1590": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2433,
        2447
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1591": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6443,
        6848
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1592": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1593": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6536,
        6540
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1595": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6604
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1596": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6604
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1597": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6604
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1598": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6590
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1600": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6604
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1602": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6604
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1603": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6604
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1604": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6604
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1605": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6604
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1607": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6604
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1608": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6604
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1609": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6604
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1610": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1612": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1614": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1616": {
      "op": "SHL"
    },
    "1617": {
      "op": "SUB"
    },
    "1618": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6613
      ],
      "op": "DUP7",
      "path": "1"
    },
    "1619": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6613
      ],
      "op": "AND",
      "path": "1"
    },
    "1620": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6613
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1621": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6613
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1622": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6613
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1623": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6613
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1624": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6613
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1625": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6613
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1626": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6613
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1627": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6579,
        6613
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1628": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6631,
        6666
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 19
    },
    "1629": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6631,
        6666
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1630": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6631,
        6666
      ],
      "op": "LT",
      "path": "1"
    },
    "1631": {
      "branch": 49,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6631,
        6666
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1632": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6623,
        6708
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6B9"
    },
    "1635": {
      "branch": 49,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6623,
        6708
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1636": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6623,
        6708
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1638": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6623,
        6708
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1639": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1643": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1645": {
      "op": "SHL"
    },
    "1646": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6623,
        6708
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1647": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6623,
        6708
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1648": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1650": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6623,
        6708
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1652": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6623,
        6708
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1653": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6623,
        6708
      ],
      "op": "ADD",
      "path": "1"
    },
    "1654": {
      "op": "MSTORE"
    },
    "1655": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "1657": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1659": {
      "op": "DUP3"
    },
    "1660": {
      "op": "ADD"
    },
    "1661": {
      "op": "MSTORE"
    },
    "1662": {
      "op": "PUSH32",
      "value": "0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
    },
    "1695": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1697": {
      "op": "DUP3"
    },
    "1698": {
      "op": "ADD"
    },
    "1699": {
      "op": "MSTORE"
    },
    "1700": {
      "op": "PUSH5",
      "value": "0x207A65726F"
    },
    "1706": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "1708": {
      "op": "SHL"
    },
    "1709": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1711": {
      "op": "DUP3"
    },
    "1712": {
      "op": "ADD"
    },
    "1713": {
      "op": "MSTORE"
    },
    "1714": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1716": {
      "op": "ADD"
    },
    "1717": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6623,
        6708
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x547"
    },
    "1720": {
      "op": "JUMP"
    },
    "1721": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6623,
        6708
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1722": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6742,
        6809
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 20,
      "value": "0x6C6"
    },
    "1725": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1726": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6765,
        6772
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1727": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6793,
        6808
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1728": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6774,
        6790
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1729": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6774,
        6808
      ],
      "op": "SUB",
      "path": "1"
    },
    "1730": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6742,
        6750
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8AD"
    },
    "1733": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6742,
        6809
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1734": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6742,
        6809
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1735": {
      "op": "POP"
    },
    "1736": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6837,
        6841
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 21,
      "value": "0x1"
    },
    "1738": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6837,
        6841
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1739": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6443,
        6848
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1740": {
      "op": "POP"
    },
    "1741": {
      "op": "POP"
    },
    "1742": {
      "op": "POP"
    },
    "1743": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "o",
      "offset": [
        6443,
        6848
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1744": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4140,
        5216
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1745": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1746": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4218,
        4222
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1748": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4331,
        4361
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1749": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4331,
        4361
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1750": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4331,
        4361
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1751": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4331,
        4347
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "1753": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4331,
        4361
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1755": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4331,
        4361
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1756": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4331,
        4361
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1758": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4331,
        4361
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1759": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4331,
        4361
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1760": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4331,
        4361
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1761": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4331,
        4361
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "1763": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4331,
        4361
      ],
      "op": "AND",
      "path": "7"
    },
    "1764": {
      "branch": 46,
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4331,
        4361
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1765": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4331,
        4392
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x706"
    },
    "1768": {
      "branch": 46,
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4331,
        4392
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1769": {
      "op": "POP"
    },
    "1770": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1772": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1774": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1776": {
      "op": "SHL"
    },
    "1777": {
      "op": "SUB"
    },
    "1778": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4365,
        4392
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1779": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4365,
        4392
      ],
      "op": "AND",
      "path": "7"
    },
    "1780": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4365,
        4392
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1782": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4365,
        4392
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1783": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4365,
        4392
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1784": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4365,
        4392
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1785": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4365,
        4381
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "1787": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4365,
        4392
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1789": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4365,
        4392
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1790": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4365,
        4392
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1792": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4365,
        4392
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1793": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4365,
        4392
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1794": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4365,
        4392
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1795": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4365,
        4392
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "1797": {
      "branch": 47,
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4365,
        4392
      ],
      "op": "AND",
      "path": "7"
    },
    "1798": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4331,
        4392
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1799": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4327,
        4489
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1800": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4327,
        4489
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x71E"
    },
    "1803": {
      "branch": 47,
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4327,
        4489
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1804": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4409,
        4451
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 22,
      "value": "0x716"
    },
    "1807": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1808": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4433,
        4442
      ],
      "op": "DUP5",
      "path": "7"
    },
    "1809": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4444,
        4450
      ],
      "op": "DUP5",
      "path": "7"
    },
    "1810": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4409,
        4418
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x9D1"
    },
    "1813": {
      "fn": "ChainEstateToken.transfer",
      "jump": "i",
      "offset": [
        4409,
        4451
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1814": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4409,
        4451
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1815": {
      "op": "POP"
    },
    "1816": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4473,
        4477
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 23,
      "value": "0x1"
    },
    "1818": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4466,
        4477
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4B3"
    },
    "1821": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4466,
        4477
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1822": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4327,
        4489
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1823": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4542,
        4563
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1825": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4611,
        4614
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x64"
    },
    "1827": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4576,
        4607
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xD"
    },
    "1829": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4576,
        4607
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1830": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4567,
        4573
      ],
      "op": "DUP5",
      "path": "7"
    },
    "1831": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4567,
        4607
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x730"
    },
    "1834": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4567,
        4607
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1835": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4567,
        4607
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1836": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4567,
        4607
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE3C"
    },
    "1839": {
      "fn": "ChainEstateToken.transfer",
      "jump": "i",
      "offset": [
        4567,
        4607
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1840": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4567,
        4607
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1841": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4566,
        4614
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x73A"
    },
    "1844": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4566,
        4614
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1845": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4566,
        4614
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1846": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4566,
        4614
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE5B"
    },
    "1849": {
      "fn": "ChainEstateToken.transfer",
      "jump": "i",
      "offset": [
        4566,
        4614
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1850": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4566,
        4614
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1851": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4542,
        4614
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1852": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4542,
        4614
      ],
      "op": "POP",
      "path": "7"
    },
    "1853": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4681,
        4701
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1855": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4761,
        4764
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x64"
    },
    "1857": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4737,
        4756
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xF"
    },
    "1859": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4737,
        4756
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1860": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4715,
        4734
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xE"
    },
    "1862": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4715,
        4734
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1863": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4715,
        4756
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x750"
    },
    "1866": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4715,
        4756
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1867": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4715,
        4756
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1868": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4715,
        4756
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDEF"
    },
    "1871": {
      "fn": "ChainEstateToken.transfer",
      "jump": "i",
      "offset": [
        4715,
        4756
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1872": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4715,
        4756
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1873": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4705,
        4757
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x75A"
    },
    "1876": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4705,
        4757
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1877": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4705,
        4711
      ],
      "op": "DUP7",
      "path": "7"
    },
    "1878": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4705,
        4757
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE3C"
    },
    "1881": {
      "fn": "ChainEstateToken.transfer",
      "jump": "i",
      "offset": [
        4705,
        4757
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1882": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4705,
        4757
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1883": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4704,
        4764
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x764"
    },
    "1886": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4704,
        4764
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1887": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4704,
        4764
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1888": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4704,
        4764
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE5B"
    },
    "1891": {
      "fn": "ChainEstateToken.transfer",
      "jump": "i",
      "offset": [
        4704,
        4764
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1892": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4704,
        4764
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1893": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4681,
        4764
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1894": {
      "op": "POP"
    },
    "1895": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4844,
        4907
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 24,
      "value": "0x77C"
    },
    "1898": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1899": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4868,
        4891
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "1901": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4868,
        4891
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1902": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1906": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1908": {
      "op": "SHL"
    },
    "1909": {
      "op": "SUB"
    },
    "1910": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4868,
        4891
      ],
      "op": "AND",
      "path": "7"
    },
    "1911": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4893,
        4906
      ],
      "op": "DUP5",
      "path": "7"
    },
    "1912": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4844,
        4853
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x9D1"
    },
    "1915": {
      "fn": "ChainEstateToken.transfer",
      "jump": "i",
      "offset": [
        4844,
        4907
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1916": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4844,
        4907
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1917": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4918,
        4988
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 25,
      "value": "0x792"
    },
    "1920": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1921": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4942,
        4973
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xB"
    },
    "1923": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4942,
        4973
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1924": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1926": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1928": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1930": {
      "op": "SHL"
    },
    "1931": {
      "op": "SUB"
    },
    "1932": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4942,
        4973
      ],
      "op": "AND",
      "path": "7"
    },
    "1933": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4975,
        4987
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1934": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4918,
        4927
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x9D1"
    },
    "1937": {
      "fn": "ChainEstateToken.transfer",
      "jump": "i",
      "offset": [
        4918,
        4988
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1938": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4918,
        4988
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1939": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        5063,
        5085
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1941": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        5113,
        5125
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1942": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        5088,
        5110
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x79F"
    },
    "1945": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        5097,
        5110
      ],
      "op": "DUP5",
      "path": "7"
    },
    "1946": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        5088,
        5094
      ],
      "op": "DUP8",
      "path": "7"
    },
    "1947": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        5088,
        5110
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE7D"
    },
    "1950": {
      "fn": "ChainEstateToken.transfer",
      "jump": "i",
      "offset": [
        5088,
        5110
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1951": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        5088,
        5110
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1952": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        5088,
        5125
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x7A9"
    },
    "1955": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        5088,
        5125
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1956": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        5088,
        5125
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1957": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        5088,
        5125
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE7D"
    },
    "1960": {
      "fn": "ChainEstateToken.transfer",
      "jump": "i",
      "offset": [
        5088,
        5125
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1961": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        5088,
        5125
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1962": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        5063,
        5125
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1963": {
      "op": "POP"
    },
    "1964": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        5136,
        5186
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 26,
      "value": "0x7B6"
    },
    "1967": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1968": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        5160,
        5169
      ],
      "op": "DUP8",
      "path": "7"
    },
    "1969": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        5171,
        5185
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1970": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        5136,
        5145
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x9D1"
    },
    "1973": {
      "fn": "ChainEstateToken.transfer",
      "jump": "i",
      "offset": [
        5136,
        5186
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1974": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        5136,
        5186
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1975": {
      "op": "POP"
    },
    "1976": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        5204,
        5208
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 27,
      "value": "0x1"
    },
    "1978": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        5204,
        5208
      ],
      "op": "SWAP6",
      "path": "7"
    },
    "1979": {
      "fn": "ChainEstateToken.transfer",
      "offset": [
        4140,
        5216
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "1980": {
      "op": "POP"
    },
    "1981": {
      "op": "POP"
    },
    "1982": {
      "op": "POP"
    },
    "1983": {
      "op": "POP"
    },
    "1984": {
      "op": "POP"
    },
    "1985": {
      "fn": "ChainEstateToken.transfer",
      "jump": "o",
      "offset": [
        4140,
        5216
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1986": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        3756,
        3864
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1987": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1989": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1990": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1992": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1994": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1996": {
      "op": "SHL"
    },
    "1997": {
      "op": "SUB"
    },
    "1998": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1999": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4"
    },
    "2000": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "2001": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7EC"
    },
    "2004": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2005": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2007": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2008": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2012": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2014": {
      "op": "SHL"
    },
    "2015": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2016": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2017": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2019": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "2020": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x547"
    },
    "2023": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2024": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE07"
    },
    "2027": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2028": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2029": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2031": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2033": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2035": {
      "op": "SHL"
    },
    "2036": {
      "op": "SUB"
    },
    "2037": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        3826,
        3848
      ],
      "op": "AND",
      "path": "7",
      "statement": 28
    },
    "2038": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        3851,
        3856
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2040": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        3826,
        3848
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2041": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        3826,
        3848
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2042": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        3826,
        3848
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2043": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        3826,
        3842
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "2045": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        3826,
        3848
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2047": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        3826,
        3848
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2048": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        3826,
        3848
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2050": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        3826,
        3848
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2051": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        3826,
        3848
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2052": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        3826,
        3856
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2053": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        3826,
        3856
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2054": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2056": {
      "op": "NOT"
    },
    "2057": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        3826,
        3856
      ],
      "op": "AND",
      "path": "7"
    },
    "2058": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        3826,
        3856
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2059": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "offset": [
        3826,
        3856
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2060": {
      "fn": "ChainEstateToken.includeUsersInFees",
      "jump": "o",
      "offset": [
        3756,
        3864
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2061": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2062": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "2064": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2065": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2067": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2069": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2071": {
      "op": "SHL"
    },
    "2072": {
      "op": "SUB"
    },
    "2073": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "2074": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4"
    },
    "2075": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "2076": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x837"
    },
    "2079": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2080": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2082": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2083": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2087": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2089": {
      "op": "SHL"
    },
    "2090": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2091": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2092": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2094": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "2095": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x547"
    },
    "2098": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2099": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE07"
    },
    "2102": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2103": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2104": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2106": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2108": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2110": {
      "op": "SHL"
    },
    "2111": {
      "op": "SUB"
    },
    "2112": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 29
    },
    "2113": {
      "branch": 55,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "2114": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x89C"
    },
    "2117": {
      "branch": 55,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2118": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2120": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2121": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2125": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2127": {
      "op": "SHL"
    },
    "2128": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2129": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2130": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2132": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2134": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2135": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "2136": {
      "op": "MSTORE"
    },
    "2137": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "2139": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2141": {
      "op": "DUP3"
    },
    "2142": {
      "op": "ADD"
    },
    "2143": {
      "op": "MSTORE"
    },
    "2144": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "2177": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2179": {
      "op": "DUP3"
    },
    "2180": {
      "op": "ADD"
    },
    "2181": {
      "op": "MSTORE"
    },
    "2182": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "2189": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "2191": {
      "op": "SHL"
    },
    "2192": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2194": {
      "op": "DUP3"
    },
    "2195": {
      "op": "ADD"
    },
    "2196": {
      "op": "MSTORE"
    },
    "2197": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2199": {
      "op": "ADD"
    },
    "2200": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x547"
    },
    "2203": {
      "op": "JUMP"
    },
    "2204": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2205": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 30,
      "value": "0x8A5"
    },
    "2208": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2209": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBAB"
    },
    "2212": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2213": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2214": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "POP",
      "path": "0"
    },
    "2215": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2216": {
      "fn": "ERC20._afterTokenTransfer",
      "offset": [
        11682,
        11802
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2217": {
      "fn": "ERC20._afterTokenTransfer",
      "offset": [
        11682,
        11802
      ],
      "op": "POP",
      "path": "1"
    },
    "2218": {
      "fn": "ERC20._afterTokenTransfer",
      "offset": [
        11682,
        11802
      ],
      "op": "POP",
      "path": "1"
    },
    "2219": {
      "fn": "ERC20._afterTokenTransfer",
      "offset": [
        11682,
        11802
      ],
      "op": "POP",
      "path": "1"
    },
    "2220": {
      "fn": "ERC20._afterTokenTransfer",
      "jump": "o",
      "offset": [
        11682,
        11802
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2221": {
      "fn": "ERC20._approve",
      "offset": [
        10019,
        10389
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2222": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2224": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2226": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2228": {
      "op": "SHL"
    },
    "2229": {
      "op": "SUB"
    },
    "2230": {
      "fn": "ERC20._approve",
      "offset": [
        10150,
        10169
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 31
    },
    "2231": {
      "branch": 50,
      "fn": "ERC20._approve",
      "offset": [
        10150,
        10169
      ],
      "op": "AND",
      "path": "1"
    },
    "2232": {
      "fn": "ERC20._approve",
      "offset": [
        10142,
        10210
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x90F"
    },
    "2235": {
      "branch": 50,
      "fn": "ERC20._approve",
      "offset": [
        10142,
        10210
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2236": {
      "fn": "ERC20._approve",
      "offset": [
        10142,
        10210
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2238": {
      "fn": "ERC20._approve",
      "offset": [
        10142,
        10210
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2239": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2243": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2245": {
      "op": "SHL"
    },
    "2246": {
      "fn": "ERC20._approve",
      "offset": [
        10142,
        10210
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2247": {
      "fn": "ERC20._approve",
      "offset": [
        10142,
        10210
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2248": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2250": {
      "fn": "ERC20._approve",
      "offset": [
        10142,
        10210
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2252": {
      "fn": "ERC20._approve",
      "offset": [
        10142,
        10210
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2253": {
      "fn": "ERC20._approve",
      "offset": [
        10142,
        10210
      ],
      "op": "ADD",
      "path": "1"
    },
    "2254": {
      "op": "MSTORE"
    },
    "2255": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2257": {
      "op": "DUP1"
    },
    "2258": {
      "op": "DUP3"
    },
    "2259": {
      "op": "ADD"
    },
    "2260": {
      "op": "MSTORE"
    },
    "2261": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "2294": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2296": {
      "op": "DUP3"
    },
    "2297": {
      "op": "ADD"
    },
    "2298": {
      "op": "MSTORE"
    },
    "2299": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "2304": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2306": {
      "op": "SHL"
    },
    "2307": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2309": {
      "op": "DUP3"
    },
    "2310": {
      "op": "ADD"
    },
    "2311": {
      "op": "MSTORE"
    },
    "2312": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2314": {
      "op": "ADD"
    },
    "2315": {
      "fn": "ERC20._approve",
      "offset": [
        10142,
        10210
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x547"
    },
    "2318": {
      "op": "JUMP"
    },
    "2319": {
      "fn": "ERC20._approve",
      "offset": [
        10142,
        10210
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2322": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2324": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2326": {
      "op": "SHL"
    },
    "2327": {
      "op": "SUB"
    },
    "2328": {
      "fn": "ERC20._approve",
      "offset": [
        10228,
        10249
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 32
    },
    "2329": {
      "branch": 51,
      "fn": "ERC20._approve",
      "offset": [
        10228,
        10249
      ],
      "op": "AND",
      "path": "1"
    },
    "2330": {
      "fn": "ERC20._approve",
      "offset": [
        10220,
        10288
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x970"
    },
    "2333": {
      "branch": 51,
      "fn": "ERC20._approve",
      "offset": [
        10220,
        10288
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2334": {
      "fn": "ERC20._approve",
      "offset": [
        10220,
        10288
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2336": {
      "fn": "ERC20._approve",
      "offset": [
        10220,
        10288
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2337": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2341": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2343": {
      "op": "SHL"
    },
    "2344": {
      "fn": "ERC20._approve",
      "offset": [
        10220,
        10288
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2345": {
      "fn": "ERC20._approve",
      "offset": [
        10220,
        10288
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2346": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2348": {
      "fn": "ERC20._approve",
      "offset": [
        10220,
        10288
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2350": {
      "fn": "ERC20._approve",
      "offset": [
        10220,
        10288
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2351": {
      "fn": "ERC20._approve",
      "offset": [
        10220,
        10288
      ],
      "op": "ADD",
      "path": "1"
    },
    "2352": {
      "op": "MSTORE"
    },
    "2353": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "2355": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2357": {
      "op": "DUP3"
    },
    "2358": {
      "op": "ADD"
    },
    "2359": {
      "op": "MSTORE"
    },
    "2360": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "2393": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2395": {
      "op": "DUP3"
    },
    "2396": {
      "op": "ADD"
    },
    "2397": {
      "op": "MSTORE"
    },
    "2398": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "2401": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "2403": {
      "op": "SHL"
    },
    "2404": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2406": {
      "op": "DUP3"
    },
    "2407": {
      "op": "ADD"
    },
    "2408": {
      "op": "MSTORE"
    },
    "2409": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2411": {
      "op": "ADD"
    },
    "2412": {
      "fn": "ERC20._approve",
      "offset": [
        10220,
        10288
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x547"
    },
    "2415": {
      "op": "JUMP"
    },
    "2416": {
      "fn": "ERC20._approve",
      "offset": [
        10220,
        10288
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2417": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2419": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2421": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2423": {
      "op": "SHL"
    },
    "2424": {
      "op": "SUB"
    },
    "2425": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10317
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 33
    },
    "2426": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10317
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2427": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10317
      ],
      "op": "AND",
      "path": "1"
    },
    "2428": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10317
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2430": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10317
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2431": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10317
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2432": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10317
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2433": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10310
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2435": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10317
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2437": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10317
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2438": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10317
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2439": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10317
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2440": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10317
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2442": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10317
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2443": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10317
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2444": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10317
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2445": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10326
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "2446": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10326
      ],
      "op": "DUP8",
      "path": "1"
    },
    "2447": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10326
      ],
      "op": "AND",
      "path": "1"
    },
    "2448": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10326
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2449": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10326
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2450": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10326
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2451": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10326
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "2452": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10326
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2453": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10326
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2454": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10326
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2455": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10326
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2456": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10326
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2457": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10326
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2458": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10335
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2459": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10335
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2460": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10335
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2461": {
      "fn": "ERC20._approve",
      "offset": [
        10350,
        10382
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 34
    },
    "2462": {
      "fn": "ERC20._approve",
      "offset": [
        10350,
        10382
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2463": {
      "op": "DUP5"
    },
    "2464": {
      "op": "DUP2"
    },
    "2465": {
      "op": "MSTORE"
    },
    "2466": {
      "fn": "ERC20._approve",
      "offset": [
        10350,
        10382
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "2499": {
      "fn": "ERC20._approve",
      "offset": [
        10350,
        10382
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2500": {
      "op": "ADD"
    },
    "2501": {
      "fn": "ERC20._approve",
      "offset": [
        10350,
        10382
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2503": {
      "fn": "ERC20._approve",
      "offset": [
        10350,
        10382
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2504": {
      "fn": "ERC20._approve",
      "offset": [
        10350,
        10382
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2505": {
      "fn": "ERC20._approve",
      "offset": [
        10350,
        10382
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2506": {
      "fn": "ERC20._approve",
      "offset": [
        10350,
        10382
      ],
      "op": "SUB",
      "path": "1"
    },
    "2507": {
      "fn": "ERC20._approve",
      "offset": [
        10350,
        10382
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2508": {
      "fn": "ERC20._approve",
      "offset": [
        10350,
        10382
      ],
      "op": "LOG3",
      "path": "1"
    },
    "2509": {
      "fn": "ERC20._approve",
      "offset": [
        10019,
        10389
      ],
      "op": "POP",
      "path": "1"
    },
    "2510": {
      "fn": "ERC20._approve",
      "offset": [
        10019,
        10389
      ],
      "op": "POP",
      "path": "1"
    },
    "2511": {
      "fn": "ERC20._approve",
      "offset": [
        10019,
        10389
      ],
      "op": "POP",
      "path": "1"
    },
    "2512": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        10019,
        10389
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2513": {
      "fn": "ERC20._transfer",
      "offset": [
        7322,
        8035
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2514": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2516": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2518": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2520": {
      "op": "SHL"
    },
    "2521": {
      "op": "SUB"
    },
    "2522": {
      "fn": "ERC20._transfer",
      "offset": [
        7457,
        7477
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 35
    },
    "2523": {
      "branch": 52,
      "fn": "ERC20._transfer",
      "offset": [
        7457,
        7477
      ],
      "op": "AND",
      "path": "1"
    },
    "2524": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7519
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA35"
    },
    "2527": {
      "branch": 52,
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7519
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2528": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7519
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2530": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7519
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2531": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2535": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2537": {
      "op": "SHL"
    },
    "2538": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7519
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2539": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7519
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2540": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2542": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7519
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2544": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7519
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2545": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7519
      ],
      "op": "ADD",
      "path": "1"
    },
    "2546": {
      "op": "MSTORE"
    },
    "2547": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "2549": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2551": {
      "op": "DUP3"
    },
    "2552": {
      "op": "ADD"
    },
    "2553": {
      "op": "MSTORE"
    },
    "2554": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "2587": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2589": {
      "op": "DUP3"
    },
    "2590": {
      "op": "ADD"
    },
    "2591": {
      "op": "MSTORE"
    },
    "2592": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "2598": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "2600": {
      "op": "SHL"
    },
    "2601": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2603": {
      "op": "DUP3"
    },
    "2604": {
      "op": "ADD"
    },
    "2605": {
      "op": "MSTORE"
    },
    "2606": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2608": {
      "op": "ADD"
    },
    "2609": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7519
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x547"
    },
    "2612": {
      "op": "JUMP"
    },
    "2613": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7519
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2614": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2618": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2620": {
      "op": "SHL"
    },
    "2621": {
      "op": "SUB"
    },
    "2622": {
      "fn": "ERC20._transfer",
      "offset": [
        7537,
        7560
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 36
    },
    "2623": {
      "branch": 53,
      "fn": "ERC20._transfer",
      "offset": [
        7537,
        7560
      ],
      "op": "AND",
      "path": "1"
    },
    "2624": {
      "fn": "ERC20._transfer",
      "offset": [
        7529,
        7600
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA97"
    },
    "2627": {
      "branch": 53,
      "fn": "ERC20._transfer",
      "offset": [
        7529,
        7600
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2628": {
      "fn": "ERC20._transfer",
      "offset": [
        7529,
        7600
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2630": {
      "fn": "ERC20._transfer",
      "offset": [
        7529,
        7600
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2631": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2635": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2637": {
      "op": "SHL"
    },
    "2638": {
      "fn": "ERC20._transfer",
      "offset": [
        7529,
        7600
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2639": {
      "fn": "ERC20._transfer",
      "offset": [
        7529,
        7600
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2640": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2642": {
      "fn": "ERC20._transfer",
      "offset": [
        7529,
        7600
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2644": {
      "fn": "ERC20._transfer",
      "offset": [
        7529,
        7600
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2645": {
      "fn": "ERC20._transfer",
      "offset": [
        7529,
        7600
      ],
      "op": "ADD",
      "path": "1"
    },
    "2646": {
      "op": "MSTORE"
    },
    "2647": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "2649": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2651": {
      "op": "DUP3"
    },
    "2652": {
      "op": "ADD"
    },
    "2653": {
      "op": "MSTORE"
    },
    "2654": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "2687": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2689": {
      "op": "DUP3"
    },
    "2690": {
      "op": "ADD"
    },
    "2691": {
      "op": "MSTORE"
    },
    "2692": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "2696": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "2698": {
      "op": "SHL"
    },
    "2699": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2701": {
      "op": "DUP3"
    },
    "2702": {
      "op": "ADD"
    },
    "2703": {
      "op": "MSTORE"
    },
    "2704": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2706": {
      "op": "ADD"
    },
    "2707": {
      "fn": "ERC20._transfer",
      "offset": [
        7529,
        7600
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x547"
    },
    "2710": {
      "op": "JUMP"
    },
    "2711": {
      "fn": "ERC20._transfer",
      "offset": [
        7529,
        7600
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2712": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2714": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2716": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2718": {
      "op": "SHL"
    },
    "2719": {
      "op": "SUB"
    },
    "2720": {
      "fn": "ERC20._transfer",
      "offset": [
        7693,
        7710
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2721": {
      "fn": "ERC20._transfer",
      "offset": [
        7693,
        7710
      ],
      "op": "AND",
      "path": "1"
    },
    "2722": {
      "fn": "ERC20._transfer",
      "offset": [
        7669,
        7690
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2724": {
      "fn": "ERC20._transfer",
      "offset": [
        7693,
        7710
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2725": {
      "fn": "ERC20._transfer",
      "offset": [
        7693,
        7710
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2726": {
      "fn": "ERC20._transfer",
      "offset": [
        7693,
        7710
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2727": {
      "fn": "ERC20._transfer",
      "offset": [
        7693,
        7710
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2729": {
      "fn": "ERC20._transfer",
      "offset": [
        7693,
        7710
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2730": {
      "fn": "ERC20._transfer",
      "offset": [
        7693,
        7710
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2731": {
      "fn": "ERC20._transfer",
      "offset": [
        7693,
        7710
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2732": {
      "fn": "ERC20._transfer",
      "offset": [
        7693,
        7710
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2734": {
      "fn": "ERC20._transfer",
      "offset": [
        7693,
        7710
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2735": {
      "fn": "ERC20._transfer",
      "offset": [
        7693,
        7710
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2736": {
      "fn": "ERC20._transfer",
      "offset": [
        7693,
        7710
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2737": {
      "fn": "ERC20._transfer",
      "offset": [
        7728,
        7751
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 37
    },
    "2738": {
      "fn": "ERC20._transfer",
      "offset": [
        7728,
        7751
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2739": {
      "fn": "ERC20._transfer",
      "offset": [
        7728,
        7751
      ],
      "op": "LT",
      "path": "1"
    },
    "2740": {
      "branch": 54,
      "fn": "ERC20._transfer",
      "offset": [
        7728,
        7751
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2741": {
      "fn": "ERC20._transfer",
      "offset": [
        7720,
        7794
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB0F"
    },
    "2744": {
      "branch": 54,
      "fn": "ERC20._transfer",
      "offset": [
        7720,
        7794
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2745": {
      "fn": "ERC20._transfer",
      "offset": [
        7720,
        7794
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2747": {
      "fn": "ERC20._transfer",
      "offset": [
        7720,
        7794
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2748": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2752": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2754": {
      "op": "SHL"
    },
    "2755": {
      "fn": "ERC20._transfer",
      "offset": [
        7720,
        7794
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2756": {
      "fn": "ERC20._transfer",
      "offset": [
        7720,
        7794
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2757": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2759": {
      "fn": "ERC20._transfer",
      "offset": [
        7720,
        7794
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2761": {
      "fn": "ERC20._transfer",
      "offset": [
        7720,
        7794
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2762": {
      "fn": "ERC20._transfer",
      "offset": [
        7720,
        7794
      ],
      "op": "ADD",
      "path": "1"
    },
    "2763": {
      "op": "MSTORE"
    },
    "2764": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "2766": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2768": {
      "op": "DUP3"
    },
    "2769": {
      "op": "ADD"
    },
    "2770": {
      "op": "MSTORE"
    },
    "2771": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "2804": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2806": {
      "op": "DUP3"
    },
    "2807": {
      "op": "ADD"
    },
    "2808": {
      "op": "MSTORE"
    },
    "2809": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "2816": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "2818": {
      "op": "SHL"
    },
    "2819": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2821": {
      "op": "DUP3"
    },
    "2822": {
      "op": "ADD"
    },
    "2823": {
      "op": "MSTORE"
    },
    "2824": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2826": {
      "op": "ADD"
    },
    "2827": {
      "fn": "ERC20._transfer",
      "offset": [
        7720,
        7794
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x547"
    },
    "2830": {
      "op": "JUMP"
    },
    "2831": {
      "fn": "ERC20._transfer",
      "offset": [
        7720,
        7794
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2832": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2834": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2836": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2838": {
      "op": "SHL"
    },
    "2839": {
      "op": "SUB"
    },
    "2840": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7845
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 38
    },
    "2841": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7845
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2842": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7845
      ],
      "op": "AND",
      "path": "1"
    },
    "2843": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7837
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2845": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7845
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2846": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7845
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2847": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7845
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2848": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7845
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2850": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7845
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2851": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7845
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2852": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7845
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2853": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7845
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2855": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7845
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2856": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7845
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2857": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7845
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2858": {
      "fn": "ERC20._transfer",
      "offset": [
        7848,
        7870
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2859": {
      "fn": "ERC20._transfer",
      "offset": [
        7848,
        7870
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2860": {
      "fn": "ERC20._transfer",
      "offset": [
        7848,
        7870
      ],
      "op": "SUB",
      "path": "1"
    },
    "2861": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7870
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2862": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7870
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2863": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7910
      ],
      "op": "SWAP2",
      "path": "1",
      "statement": 39
    },
    "2864": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7910
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2865": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7910
      ],
      "op": "AND",
      "path": "1"
    },
    "2866": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7910
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2867": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7910
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2868": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7910
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2869": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7910
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2870": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7910
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2871": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7920
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2872": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7920
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2873": {
      "fn": "ERC20._transfer",
      "offset": [
        7864,
        7870
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2874": {
      "fn": "ERC20._transfer",
      "offset": [
        7864,
        7870
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2875": {
      "fn": "ERC20._transfer",
      "offset": [
        7828,
        7837
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2876": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7920
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB46"
    },
    "2879": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7920
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2880": {
      "fn": "ERC20._transfer",
      "offset": [
        7864,
        7870
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2881": {
      "fn": "ERC20._transfer",
      "offset": [
        7864,
        7870
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2882": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7920
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDEF"
    },
    "2885": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7890,
        7920
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2886": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7920
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2887": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7920
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2888": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7920
      ],
      "op": "POP",
      "path": "1"
    },
    "2889": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7920
      ],
      "op": "POP",
      "path": "1"
    },
    "2890": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7920
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2891": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7920
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2892": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7920
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2893": {
      "fn": "ERC20._transfer",
      "offset": [
        7890,
        7920
      ],
      "op": "POP",
      "path": "1"
    },
    "2894": {
      "fn": "ERC20._transfer",
      "offset": [
        7953,
        7962
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 40
    },
    "2895": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2897": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2899": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2901": {
      "op": "SHL"
    },
    "2902": {
      "op": "SUB"
    },
    "2903": {
      "fn": "ERC20._transfer",
      "offset": [
        7936,
        7971
      ],
      "op": "AND",
      "path": "1"
    },
    "2904": {
      "fn": "ERC20._transfer",
      "offset": [
        7945,
        7951
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2905": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2907": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2909": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2911": {
      "op": "SHL"
    },
    "2912": {
      "op": "SUB"
    },
    "2913": {
      "fn": "ERC20._transfer",
      "offset": [
        7936,
        7971
      ],
      "op": "AND",
      "path": "1"
    },
    "2914": {
      "fn": "ERC20._transfer",
      "offset": [
        7936,
        7971
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "2947": {
      "fn": "ERC20._transfer",
      "offset": [
        7964,
        7970
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2948": {
      "fn": "ERC20._transfer",
      "offset": [
        7936,
        7971
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2950": {
      "fn": "ERC20._transfer",
      "offset": [
        7936,
        7971
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2951": {
      "fn": "ERC20._transfer",
      "offset": [
        7936,
        7971
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB92"
    },
    "2954": {
      "fn": "ERC20._transfer",
      "offset": [
        7936,
        7971
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2955": {
      "op": "DUP2"
    },
    "2956": {
      "op": "MSTORE"
    },
    "2957": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2959": {
      "op": "ADD"
    },
    "2960": {
      "op": "SWAP1"
    },
    "2961": {
      "op": "JUMP"
    },
    "2962": {
      "fn": "ERC20._transfer",
      "offset": [
        7936,
        7971
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2963": {
      "fn": "ERC20._transfer",
      "offset": [
        7936,
        7971
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2965": {
      "fn": "ERC20._transfer",
      "offset": [
        7936,
        7971
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2966": {
      "fn": "ERC20._transfer",
      "offset": [
        7936,
        7971
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2967": {
      "fn": "ERC20._transfer",
      "offset": [
        7936,
        7971
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2968": {
      "fn": "ERC20._transfer",
      "offset": [
        7936,
        7971
      ],
      "op": "SUB",
      "path": "1"
    },
    "2969": {
      "fn": "ERC20._transfer",
      "offset": [
        7936,
        7971
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2970": {
      "fn": "ERC20._transfer",
      "offset": [
        7936,
        7971
      ],
      "op": "LOG3",
      "path": "1"
    },
    "2971": {
      "fn": "ERC20._transfer",
      "offset": [
        7982,
        8028
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 41,
      "value": "0xBA5"
    },
    "2974": {
      "fn": "ERC20._transfer",
      "offset": [
        8002,
        8008
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2975": {
      "fn": "ERC20._transfer",
      "offset": [
        8010,
        8019
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2976": {
      "fn": "ERC20._transfer",
      "offset": [
        8021,
        8027
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2977": {
      "fn": "ERC20._transfer",
      "offset": [
        7982,
        8001
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBFD"
    },
    "2980": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7982,
        8028
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2981": {
      "fn": "ERC20._transfer",
      "offset": [
        7982,
        8028
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2982": {
      "fn": "ERC20._transfer",
      "offset": [
        7439,
        8035
      ],
      "op": "POP",
      "path": "1"
    },
    "2983": {
      "fn": "ERC20._transfer",
      "offset": [
        7322,
        8035
      ],
      "op": "POP",
      "path": "1"
    },
    "2984": {
      "fn": "ERC20._transfer",
      "offset": [
        7322,
        8035
      ],
      "op": "POP",
      "path": "1"
    },
    "2985": {
      "fn": "ERC20._transfer",
      "offset": [
        7322,
        8035
      ],
      "op": "POP",
      "path": "1"
    },
    "2986": {
      "fn": "ERC20._transfer",
      "jump": "o",
      "offset": [
        7322,
        8035
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2987": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2988": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "2990": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2991": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2992": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2994": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2996": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2998": {
      "op": "SHL"
    },
    "2999": {
      "op": "SUB"
    },
    "3000": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 42
    },
    "3001": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3002": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "3003": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3005": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3007": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3009": {
      "op": "SHL"
    },
    "3010": {
      "op": "SUB"
    },
    "3011": {
      "op": "NOT"
    },
    "3012": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3013": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "3014": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3015": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "3016": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3017": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3018": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3019": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 43,
      "value": "0x40"
    },
    "3021": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3022": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3023": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "3024": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3025": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3026": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3027": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3028": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "3061": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3062": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3064": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3065": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "3066": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "3067": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "3068": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3069": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        5507,
        5832
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3070": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3072": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3074": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3076": {
      "op": "SHL"
    },
    "3077": {
      "op": "SUB"
    },
    "3078": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3079": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "AND",
      "path": "1"
    },
    "3080": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        5614,
        5633
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3082": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3083": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3084": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3085": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3087": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3088": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3089": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3090": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3092": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3093": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3094": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3095": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3096": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        5735,
        5752
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 44,
      "value": "0x7"
    },
    "3098": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        5735,
        5756
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3099": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        5735,
        5756
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "3100": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        5735,
        5756
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3101": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        5735,
        5756
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3102": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        5735,
        5756
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3103": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        5735,
        5756
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3104": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        5735,
        5756
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3105": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3106": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3107": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        5712,
        5731
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC2C"
    },
    "3110": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        5726,
        5731
      ],
      "op": "DUP5",
      "path": "7"
    },
    "3111": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3493,
        3511
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3112": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        5712,
        5731
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE7D"
    },
    "3115": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "jump": "i",
      "offset": [
        5712,
        5731
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3116": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        5712,
        5731
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3117": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        5711,
        5756
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC36"
    },
    "3120": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        5711,
        5756
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3121": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        5711,
        5756
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3122": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        5711,
        5756
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE3C"
    },
    "3125": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "jump": "i",
      "offset": [
        5711,
        5756
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3126": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        5711,
        5756
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3127": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        5685,
        5708
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC40"
    },
    "3130": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        5693,
        5708
      ],
      "op": "TIMESTAMP",
      "path": "7"
    },
    "3131": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        5685,
        5690
      ],
      "op": "DUP6",
      "path": "7"
    },
    "3132": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        5685,
        5708
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE3C"
    },
    "3135": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "jump": "i",
      "offset": [
        5685,
        5708
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3136": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        5685,
        5708
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3137": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        5685,
        5756
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC4A"
    },
    "3140": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        5685,
        5756
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3141": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        5685,
        5756
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3142": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        5685,
        5756
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDEF"
    },
    "3145": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "jump": "i",
      "offset": [
        5685,
        5756
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3146": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        5685,
        5756
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3147": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        5684,
        5771
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC54"
    },
    "3150": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        5684,
        5771
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3151": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        5684,
        5771
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3152": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        5684,
        5771
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE5B"
    },
    "3155": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "jump": "i",
      "offset": [
        5684,
        5771
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3156": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        5684,
        5771
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3157": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3159": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3161": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3163": {
      "op": "SHL"
    },
    "3164": {
      "op": "SUB"
    },
    "3165": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        5660,
        5681
      ],
      "op": "DUP5",
      "path": "7"
    },
    "3166": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        5660,
        5681
      ],
      "op": "AND",
      "path": "7"
    },
    "3167": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        5660,
        5681
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3169": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        5660,
        5681
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3170": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        5660,
        5681
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3171": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        5660,
        5681
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3172": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        5660,
        5677
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "3174": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        5660,
        5681
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3176": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        5660,
        5681
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3177": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        5660,
        5681
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3179": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        5660,
        5681
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3180": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        5660,
        5681
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3181": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        5660,
        5771
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "3182": {
      "fn": "ChainEstateToken._afterTokenTransfer",
      "offset": [
        5782,
        5824
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 45,
      "value": "0xBA5"
    },
    "3185": {
      "fn": "ERC20._afterTokenTransfer",
      "offset": [
        11682,
        11802
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3186": {
      "op": "JUMPDEST"
    },
    "3187": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3189": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3191": {
      "op": "DUP1"
    },
    "3192": {
      "op": "DUP4"
    },
    "3193": {
      "op": "MSTORE"
    },
    "3194": {
      "op": "DUP4"
    },
    "3195": {
      "op": "MLOAD"
    },
    "3196": {
      "op": "DUP1"
    },
    "3197": {
      "op": "DUP3"
    },
    "3198": {
      "op": "DUP6"
    },
    "3199": {
      "op": "ADD"
    },
    "3200": {
      "op": "MSTORE"
    },
    "3201": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3203": {
      "op": "JUMPDEST"
    },
    "3204": {
      "op": "DUP2"
    },
    "3205": {
      "op": "DUP2"
    },
    "3206": {
      "op": "LT"
    },
    "3207": {
      "op": "ISZERO"
    },
    "3208": {
      "op": "PUSH2",
      "value": "0xC9F"
    },
    "3211": {
      "op": "JUMPI"
    },
    "3212": {
      "op": "DUP6"
    },
    "3213": {
      "op": "DUP2"
    },
    "3214": {
      "op": "ADD"
    },
    "3215": {
      "op": "DUP4"
    },
    "3216": {
      "op": "ADD"
    },
    "3217": {
      "op": "MLOAD"
    },
    "3218": {
      "op": "DUP6"
    },
    "3219": {
      "op": "DUP3"
    },
    "3220": {
      "op": "ADD"
    },
    "3221": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3223": {
      "op": "ADD"
    },
    "3224": {
      "op": "MSTORE"
    },
    "3225": {
      "op": "DUP3"
    },
    "3226": {
      "op": "ADD"
    },
    "3227": {
      "op": "PUSH2",
      "value": "0xC83"
    },
    "3230": {
      "op": "JUMP"
    },
    "3231": {
      "op": "JUMPDEST"
    },
    "3232": {
      "op": "DUP2"
    },
    "3233": {
      "op": "DUP2"
    },
    "3234": {
      "op": "GT"
    },
    "3235": {
      "op": "ISZERO"
    },
    "3236": {
      "op": "PUSH2",
      "value": "0xCB1"
    },
    "3239": {
      "op": "JUMPI"
    },
    "3240": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3242": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3244": {
      "op": "DUP4"
    },
    "3245": {
      "op": "DUP8"
    },
    "3246": {
      "op": "ADD"
    },
    "3247": {
      "op": "ADD"
    },
    "3248": {
      "op": "MSTORE"
    },
    "3249": {
      "op": "JUMPDEST"
    },
    "3250": {
      "op": "POP"
    },
    "3251": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3253": {
      "op": "ADD"
    },
    "3254": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3256": {
      "op": "NOT"
    },
    "3257": {
      "op": "AND"
    },
    "3258": {
      "op": "SWAP3"
    },
    "3259": {
      "op": "SWAP1"
    },
    "3260": {
      "op": "SWAP3"
    },
    "3261": {
      "op": "ADD"
    },
    "3262": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3264": {
      "op": "ADD"
    },
    "3265": {
      "op": "SWAP4"
    },
    "3266": {
      "op": "SWAP3"
    },
    "3267": {
      "op": "POP"
    },
    "3268": {
      "op": "POP"
    },
    "3269": {
      "op": "POP"
    },
    "3270": {
      "jump": "o",
      "op": "JUMP"
    },
    "3271": {
      "op": "JUMPDEST"
    },
    "3272": {
      "op": "DUP1"
    },
    "3273": {
      "op": "CALLDATALOAD"
    },
    "3274": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3278": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3280": {
      "op": "SHL"
    },
    "3281": {
      "op": "SUB"
    },
    "3282": {
      "op": "DUP2"
    },
    "3283": {
      "op": "AND"
    },
    "3284": {
      "op": "DUP2"
    },
    "3285": {
      "op": "EQ"
    },
    "3286": {
      "op": "PUSH2",
      "value": "0xCDE"
    },
    "3289": {
      "op": "JUMPI"
    },
    "3290": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3292": {
      "op": "DUP1"
    },
    "3293": {
      "op": "REVERT"
    },
    "3294": {
      "op": "JUMPDEST"
    },
    "3295": {
      "op": "SWAP2"
    },
    "3296": {
      "op": "SWAP1"
    },
    "3297": {
      "op": "POP"
    },
    "3298": {
      "jump": "o",
      "op": "JUMP"
    },
    "3299": {
      "op": "JUMPDEST"
    },
    "3300": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3302": {
      "op": "DUP1"
    },
    "3303": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3305": {
      "op": "DUP4"
    },
    "3306": {
      "op": "DUP6"
    },
    "3307": {
      "op": "SUB"
    },
    "3308": {
      "op": "SLT"
    },
    "3309": {
      "op": "ISZERO"
    },
    "3310": {
      "op": "PUSH2",
      "value": "0xCF6"
    },
    "3313": {
      "op": "JUMPI"
    },
    "3314": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3316": {
      "op": "DUP1"
    },
    "3317": {
      "op": "REVERT"
    },
    "3318": {
      "op": "JUMPDEST"
    },
    "3319": {
      "op": "PUSH2",
      "value": "0xCFF"
    },
    "3322": {
      "op": "DUP4"
    },
    "3323": {
      "op": "PUSH2",
      "value": "0xCC7"
    },
    "3326": {
      "jump": "i",
      "op": "JUMP"
    },
    "3327": {
      "op": "JUMPDEST"
    },
    "3328": {
      "op": "SWAP5"
    },
    "3329": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3331": {
      "op": "SWAP4"
    },
    "3332": {
      "op": "SWAP1"
    },
    "3333": {
      "op": "SWAP4"
    },
    "3334": {
      "op": "ADD"
    },
    "3335": {
      "op": "CALLDATALOAD"
    },
    "3336": {
      "op": "SWAP4"
    },
    "3337": {
      "op": "POP"
    },
    "3338": {
      "op": "POP"
    },
    "3339": {
      "op": "POP"
    },
    "3340": {
      "jump": "o",
      "op": "JUMP"
    },
    "3341": {
      "op": "JUMPDEST"
    },
    "3342": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3344": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3346": {
      "op": "DUP3"
    },
    "3347": {
      "op": "DUP5"
    },
    "3348": {
      "op": "SUB"
    },
    "3349": {
      "op": "SLT"
    },
    "3350": {
      "op": "ISZERO"
    },
    "3351": {
      "op": "PUSH2",
      "value": "0xD1F"
    },
    "3354": {
      "op": "JUMPI"
    },
    "3355": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3357": {
      "op": "DUP1"
    },
    "3358": {
      "op": "REVERT"
    },
    "3359": {
      "op": "JUMPDEST"
    },
    "3360": {
      "op": "PUSH2",
      "value": "0xD28"
    },
    "3363": {
      "op": "DUP3"
    },
    "3364": {
      "op": "PUSH2",
      "value": "0xCC7"
    },
    "3367": {
      "jump": "i",
      "op": "JUMP"
    },
    "3368": {
      "op": "JUMPDEST"
    },
    "3369": {
      "op": "SWAP4"
    },
    "3370": {
      "op": "SWAP3"
    },
    "3371": {
      "op": "POP"
    },
    "3372": {
      "op": "POP"
    },
    "3373": {
      "op": "POP"
    },
    "3374": {
      "jump": "o",
      "op": "JUMP"
    },
    "3375": {
      "op": "JUMPDEST"
    },
    "3376": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3378": {
      "op": "DUP1"
    },
    "3379": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3381": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3383": {
      "op": "DUP5"
    },
    "3384": {
      "op": "DUP7"
    },
    "3385": {
      "op": "SUB"
    },
    "3386": {
      "op": "SLT"
    },
    "3387": {
      "op": "ISZERO"
    },
    "3388": {
      "op": "PUSH2",
      "value": "0xD44"
    },
    "3391": {
      "op": "JUMPI"
    },
    "3392": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3394": {
      "op": "DUP1"
    },
    "3395": {
      "op": "REVERT"
    },
    "3396": {
      "op": "JUMPDEST"
    },
    "3397": {
      "op": "PUSH2",
      "value": "0xD4D"
    },
    "3400": {
      "op": "DUP5"
    },
    "3401": {
      "op": "PUSH2",
      "value": "0xCC7"
    },
    "3404": {
      "jump": "i",
      "op": "JUMP"
    },
    "3405": {
      "op": "JUMPDEST"
    },
    "3406": {
      "op": "SWAP3"
    },
    "3407": {
      "op": "POP"
    },
    "3408": {
      "op": "PUSH2",
      "value": "0xD5B"
    },
    "3411": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3413": {
      "op": "DUP6"
    },
    "3414": {
      "op": "ADD"
    },
    "3415": {
      "op": "PUSH2",
      "value": "0xCC7"
    },
    "3418": {
      "jump": "i",
      "op": "JUMP"
    },
    "3419": {
      "op": "JUMPDEST"
    },
    "3420": {
      "op": "SWAP2"
    },
    "3421": {
      "op": "POP"
    },
    "3422": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3424": {
      "op": "DUP5"
    },
    "3425": {
      "op": "ADD"
    },
    "3426": {
      "op": "CALLDATALOAD"
    },
    "3427": {
      "op": "SWAP1"
    },
    "3428": {
      "op": "POP"
    },
    "3429": {
      "op": "SWAP3"
    },
    "3430": {
      "op": "POP"
    },
    "3431": {
      "op": "SWAP3"
    },
    "3432": {
      "op": "POP"
    },
    "3433": {
      "op": "SWAP3"
    },
    "3434": {
      "jump": "o",
      "op": "JUMP"
    },
    "3435": {
      "op": "JUMPDEST"
    },
    "3436": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3438": {
      "op": "DUP1"
    },
    "3439": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3441": {
      "op": "DUP4"
    },
    "3442": {
      "op": "DUP6"
    },
    "3443": {
      "op": "SUB"
    },
    "3444": {
      "op": "SLT"
    },
    "3445": {
      "op": "ISZERO"
    },
    "3446": {
      "op": "PUSH2",
      "value": "0xD7E"
    },
    "3449": {
      "op": "JUMPI"
    },
    "3450": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3452": {
      "op": "DUP1"
    },
    "3453": {
      "op": "REVERT"
    },
    "3454": {
      "op": "JUMPDEST"
    },
    "3455": {
      "op": "PUSH2",
      "value": "0xD87"
    },
    "3458": {
      "op": "DUP4"
    },
    "3459": {
      "op": "PUSH2",
      "value": "0xCC7"
    },
    "3462": {
      "jump": "i",
      "op": "JUMP"
    },
    "3463": {
      "op": "JUMPDEST"
    },
    "3464": {
      "op": "SWAP2"
    },
    "3465": {
      "op": "POP"
    },
    "3466": {
      "op": "PUSH2",
      "value": "0xD95"
    },
    "3469": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3471": {
      "op": "DUP5"
    },
    "3472": {
      "op": "ADD"
    },
    "3473": {
      "op": "PUSH2",
      "value": "0xCC7"
    },
    "3476": {
      "jump": "i",
      "op": "JUMP"
    },
    "3477": {
      "op": "JUMPDEST"
    },
    "3478": {
      "op": "SWAP1"
    },
    "3479": {
      "op": "POP"
    },
    "3480": {
      "op": "SWAP3"
    },
    "3481": {
      "op": "POP"
    },
    "3482": {
      "op": "SWAP3"
    },
    "3483": {
      "op": "SWAP1"
    },
    "3484": {
      "op": "POP"
    },
    "3485": {
      "jump": "o",
      "op": "JUMP"
    },
    "3486": {
      "op": "JUMPDEST"
    },
    "3487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3489": {
      "op": "DUP2"
    },
    "3490": {
      "op": "DUP2"
    },
    "3491": {
      "op": "SHR"
    },
    "3492": {
      "op": "SWAP1"
    },
    "3493": {
      "op": "DUP3"
    },
    "3494": {
      "op": "AND"
    },
    "3495": {
      "op": "DUP1"
    },
    "3496": {
      "op": "PUSH2",
      "value": "0xDB2"
    },
    "3499": {
      "op": "JUMPI"
    },
    "3500": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "3502": {
      "op": "DUP3"
    },
    "3503": {
      "op": "AND"
    },
    "3504": {
      "op": "SWAP2"
    },
    "3505": {
      "op": "POP"
    },
    "3506": {
      "op": "JUMPDEST"
    },
    "3507": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3509": {
      "op": "DUP3"
    },
    "3510": {
      "op": "LT"
    },
    "3511": {
      "op": "DUP2"
    },
    "3512": {
      "op": "EQ"
    },
    "3513": {
      "op": "ISZERO"
    },
    "3514": {
      "op": "PUSH2",
      "value": "0xDD3"
    },
    "3517": {
      "op": "JUMPI"
    },
    "3518": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3523": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3525": {
      "op": "SHL"
    },
    "3526": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3528": {
      "op": "MSTORE"
    },
    "3529": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "3531": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3533": {
      "op": "MSTORE"
    },
    "3534": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3536": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3538": {
      "op": "REVERT"
    },
    "3539": {
      "op": "JUMPDEST"
    },
    "3540": {
      "op": "POP"
    },
    "3541": {
      "op": "SWAP2"
    },
    "3542": {
      "op": "SWAP1"
    },
    "3543": {
      "op": "POP"
    },
    "3544": {
      "jump": "o",
      "op": "JUMP"
    },
    "3545": {
      "op": "JUMPDEST"
    },
    "3546": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3551": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3553": {
      "op": "SHL"
    },
    "3554": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3556": {
      "op": "MSTORE"
    },
    "3557": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "3559": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3561": {
      "op": "MSTORE"
    },
    "3562": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3564": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3566": {
      "op": "REVERT"
    },
    "3567": {
      "op": "JUMPDEST"
    },
    "3568": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3570": {
      "op": "DUP3"
    },
    "3571": {
      "op": "NOT"
    },
    "3572": {
      "op": "DUP3"
    },
    "3573": {
      "op": "GT"
    },
    "3574": {
      "op": "ISZERO"
    },
    "3575": {
      "op": "PUSH2",
      "value": "0xE02"
    },
    "3578": {
      "op": "JUMPI"
    },
    "3579": {
      "op": "PUSH2",
      "value": "0xE02"
    },
    "3582": {
      "op": "PUSH2",
      "value": "0xDD9"
    },
    "3585": {
      "jump": "i",
      "op": "JUMP"
    },
    "3586": {
      "op": "JUMPDEST"
    },
    "3587": {
      "op": "POP"
    },
    "3588": {
      "op": "ADD"
    },
    "3589": {
      "op": "SWAP1"
    },
    "3590": {
      "jump": "o",
      "op": "JUMP"
    },
    "3591": {
      "op": "JUMPDEST"
    },
    "3592": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3594": {
      "op": "DUP1"
    },
    "3595": {
      "op": "DUP3"
    },
    "3596": {
      "op": "MSTORE"
    },
    "3597": {
      "op": "DUP2"
    },
    "3598": {
      "op": "DUP2"
    },
    "3599": {
      "op": "ADD"
    },
    "3600": {
      "op": "MSTORE"
    },
    "3601": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "3634": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3636": {
      "op": "DUP3"
    },
    "3637": {
      "op": "ADD"
    },
    "3638": {
      "op": "MSTORE"
    },
    "3639": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3641": {
      "op": "ADD"
    },
    "3642": {
      "op": "SWAP1"
    },
    "3643": {
      "jump": "o",
      "op": "JUMP"
    },
    "3644": {
      "op": "JUMPDEST"
    },
    "3645": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3647": {
      "op": "DUP2"
    },
    "3648": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3650": {
      "op": "NOT"
    },
    "3651": {
      "op": "DIV"
    },
    "3652": {
      "op": "DUP4"
    },
    "3653": {
      "op": "GT"
    },
    "3654": {
      "op": "DUP3"
    },
    "3655": {
      "op": "ISZERO"
    },
    "3656": {
      "op": "ISZERO"
    },
    "3657": {
      "op": "AND"
    },
    "3658": {
      "op": "ISZERO"
    },
    "3659": {
      "op": "PUSH2",
      "value": "0xE56"
    },
    "3662": {
      "op": "JUMPI"
    },
    "3663": {
      "op": "PUSH2",
      "value": "0xE56"
    },
    "3666": {
      "op": "PUSH2",
      "value": "0xDD9"
    },
    "3669": {
      "jump": "i",
      "op": "JUMP"
    },
    "3670": {
      "op": "JUMPDEST"
    },
    "3671": {
      "op": "POP"
    },
    "3672": {
      "op": "MUL"
    },
    "3673": {
      "op": "SWAP1"
    },
    "3674": {
      "jump": "o",
      "op": "JUMP"
    },
    "3675": {
      "op": "JUMPDEST"
    },
    "3676": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3678": {
      "op": "DUP3"
    },
    "3679": {
      "op": "PUSH2",
      "value": "0xE78"
    },
    "3682": {
      "op": "JUMPI"
    },
    "3683": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3688": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3690": {
      "op": "SHL"
    },
    "3691": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3693": {
      "op": "MSTORE"
    },
    "3694": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "3696": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3698": {
      "op": "MSTORE"
    },
    "3699": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3701": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3703": {
      "op": "REVERT"
    },
    "3704": {
      "op": "JUMPDEST"
    },
    "3705": {
      "op": "POP"
    },
    "3706": {
      "op": "DIV"
    },
    "3707": {
      "op": "SWAP1"
    },
    "3708": {
      "jump": "o",
      "op": "JUMP"
    },
    "3709": {
      "op": "JUMPDEST"
    },
    "3710": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3712": {
      "op": "DUP3"
    },
    "3713": {
      "op": "DUP3"
    },
    "3714": {
      "op": "LT"
    },
    "3715": {
      "op": "ISZERO"
    },
    "3716": {
      "op": "PUSH2",
      "value": "0xE8F"
    },
    "3719": {
      "op": "JUMPI"
    },
    "3720": {
      "op": "PUSH2",
      "value": "0xE8F"
    },
    "3723": {
      "op": "PUSH2",
      "value": "0xDD9"
    },
    "3726": {
      "jump": "i",
      "op": "JUMP"
    },
    "3727": {
      "op": "JUMPDEST"
    },
    "3728": {
      "op": "POP"
    },
    "3729": {
      "op": "SUB"
    },
    "3730": {
      "op": "SWAP1"
    },
    "3731": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "67fd869ba9b4bce001d4db2515bb1da8b194998d",
  "source": "// SPDX-License-Identifier: MIT\n \npragma solidity >=0.8.0 <0.9.0;\n \nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/**\n * @title Chain Estate Token\n * @dev Main contract for Chain Estate\n */\ncontract ChainEstateToken is ERC20, Ownable {\n\n    // Mapping to exclude some contracts from fees. Transfers are excluded from fees if address in this mapping is recipient or sender.\n    mapping (address => bool) public excludedFromFees;\n\n    // Mapping to determine the timestamp of each address' investment. Earlier average investment = better air drop rewards.\n    mapping (address => uint256) public airDropInvestTime;\n\n    // Address of the contract responsible for the air dropping mechanism.\n    address public airDropContractAddress;\n\n    // Address of the contract responsible for the presale mechanism.\n    address public preSaleContractAddress;\n\n    // Real estate wallet address used to collect funds to purchase real estate.\n    address public realEstateWalletAddress;\n\n    // Developer wallet address used for marketing/funding the team.\n    address public developerMarketingWalletAddress;\n\n    // The initial block timestamp of the token contract.\n    uint256 public initialTimeStamp;\n\n    // Real estate transaction fee - starting at 3%.\n    uint256 public realEstateTransactionFeePercent = 3;\n\n    // Developer team transaction fee - starting at 1%.\n    uint256 public developerFeePercent = 1;\n\n    // Marketing transaction fee - starting at 1%.\n    uint256 public marketingFeePercent = 1;\n\n    // Initial token distribution:\n    // 30% - Air drop contract\n    // 30% - Pre-sale contract\n    // 30% - Developer wallet to put into liquidity pool\n    // 10% - Developer wallet for marketing\n    constructor(\n        uint256 initialSupply, \n        address _airDropContractAddress, \n        address _preSaleContractAddress, \n        address _realEstateWalletAddress, \n        address _developerMarketingWalletAddress) ERC20(\"ChainEstateToken\", \"CHES\") {\n            initialTimeStamp = block.timestamp;\n            airDropContractAddress = _airDropContractAddress;\n            preSaleContractAddress = _preSaleContractAddress;\n            realEstateWalletAddress = _realEstateWalletAddress;\n            developerMarketingWalletAddress = _developerMarketingWalletAddress;\n            excludedFromFees[realEstateWalletAddress] = true;\n            excludedFromFees[developerMarketingWalletAddress] = true;\n            excludedFromFees[preSaleContractAddress] = true;    // No transaction fees for presale\n            excludedFromFees[airDropContractAddress] = true;    // No transaction fees for claiming air drop rewards\n            _mint(airDropContractAddress, (initialSupply) * 3 / 10);\n            _mint(preSaleContractAddress, (initialSupply) * 3 / 10);\n            _mint(realEstateWalletAddress, (initialSupply) * 3 / 10);\n            _mint(developerMarketingWalletAddress, initialSupply / 10);\n    }\n\n    /**\n     * @dev Returns the contract address\n     * @return contract address\n     */\n    function getContractAddress() public view returns (address){\n        return address(this);\n    }\n\n    /**\n    * @dev Adds a user to be excluded from fees.\n    * @param user address of the user to be excluded from fees.\n     */\n    function excludeUserFromFees(address user) public onlyOwner {\n        excludedFromFees[user] = true;\n    }\n\n    function getCurrentTimestamp() public view returns (uint256) {\n        return block.timestamp;\n    }\n\n    /**\n    * @dev Removes a user from the fee exclusion.\n    * @param user address of the user than will now have to pay transaction fees.\n     */\n    function includeUsersInFees(address user) public onlyOwner {\n        excludedFromFees[user] = false;\n    }\n\n    /**\n     * @dev Overrides the BEP20 transfer function to include transaction fees.\n     * @param recipient the recipient of the transfer\n     * @param amount the amount to be transfered\n     * @return bool representing if the transfer was successful\n     */\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\n        // If the sender or recipient is excluded from fees, perform the default transfer.\n        if (excludedFromFees[_msgSender()] || excludedFromFees[recipient]) {\n            _transfer(_msgSender(), recipient, amount);\n            return true;\n        }\n\n        // Real estate transaction fee.\n        uint256 realEstateFee = (amount * realEstateTransactionFeePercent) / 100;\n        // Developer team + marketing transaction fee.\n        uint256 devMarketFee = (amount * (developerFeePercent + marketingFeePercent)) / 100;\n \n        // Sends the transaction fees to the respective wallets.\n        _transfer(_msgSender(), realEstateWalletAddress, realEstateFee);\n        _transfer(_msgSender(), developerMarketingWalletAddress, devMarketFee);\n \n        // Sends [initial amount] - [fees] to the recipient\n        uint256 valueAfterFees = amount - realEstateFee - devMarketFee;\n        _transfer(_msgSender(), recipient, valueAfterFees);\n        return true;\n    }\n\n    /**\n     * @dev After a token transfer, update the recipient address's air drop invest time since they have a later investment now.\n     * @param from the sender's address\n     * @param to the recipient's address\n     * @param value the amount that was transferred\n     */\n    function _afterTokenTransfer(address from, address to, uint256 value) internal virtual override {\n        uint256 userBalance = balanceOf(to);\n        airDropInvestTime[to] = (value * block.timestamp + (userBalance - value) * airDropInvestTime[to]) / userBalance;\n        super._afterTokenTransfer(from, to, value);\n    }\n}",
  "sourceMap": "265:5570:7:-:0;;;1396:1;1347:50;;1500:1;1463:38;;1599:1;1562:38;;1812:1226;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1963:113:1;;;;;;;;;;;-1:-1:-1;;;1963:113:1;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1963:113:1;;;;2029:13;;1963:113;;;2029:13;;:5;;:13;:::i;:::-;-1:-1:-1;2052:17:1;;;;:7;;:17;;;;;:::i;:::-;;1963:113;;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;:32::i;:::-;2107:15:7::1;2088:16;:34:::0;2137:22:::1;:48:::0;;-1:-1:-1;;;;;2137:48:7;;::::1;-1:-1:-1::0;;;;;;2137:48:7;;::::1;;::::0;;2200:22:::1;:48:::0;;;;::::1;::::0;;::::1;;::::0;;2263:23:::1;:50:::0;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;2328:31:::1;:66:::0;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;2137:22:::1;2409:41:::0;;;:16:::1;:41;::::0;;;;;:48;;-1:-1:-1;;2409:48:7;;::::1;2137::::0;2409;;::::1;::::0;;;2489:31;;;::::1;2472:49:::0;;;;;:56;;;::::1;::::0;::::1;::::0;;2560:22;;;::::1;2543:40:::0;;;;;:47;;;::::1;::::0;::::1;::::0;;2660:22;;;::::1;2643:40:::0;;;;:47;;;;::::1;::::0;;::::1;::::0;;;2767:22;;2761:55:::1;::::0;2767:22:::1;::::0;2791:19:::1;2792:13:::0;-1:-1:-1;2791:19:7::1;:::i;:::-;:24;;;;:::i;:::-;2761:5;:55::i;:::-;2837:22;::::0;2831:55:::1;::::0;-1:-1:-1;;;;;2837:22:7::1;2883:2;2861:19;2862:13:::0;2879:1:::1;2861:19;:::i;2831:55::-;2907:23;::::0;;2901:56:::1;::::0;-1:-1:-1;;;;;2907:23:7;;::::1;::::0;2932:19:::1;2933:13:::0;2950:1:::1;2932:19;:::i;2901:56::-;2978:31;::::0;2972:58:::1;::::0;-1:-1:-1;;;;;2978:31:7::1;3011:18;3027:2;3011:13:::0;:18:::1;:::i;2972:58::-;1812:1226:::0;;;;;265:5570;;640:96:4;719:10;;640:96::o;2270:187:0:-;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;8311:389:1:-;-1:-1:-1;;;;;8394:21:1;;8386:65;;;;-1:-1:-1;;;8386:65:1;;1456:2:8;8386:65:1;;;1438:21:8;1495:2;1475:18;;;1468:30;1534:33;1514:18;;;1507:61;1585:18;;8386:65:1;;;;;;;;8538:6;8522:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8554:18:1;;:9;:18;;;;;;;;;;:28;;8576:6;;8554:9;:28;;8576:6;;8554:28;:::i;:::-;;;;-1:-1:-1;;8597:37:1;;1893:25:8;;;-1:-1:-1;;;;;8597:37:1;;;8614:1;;8597:37;;1881:2:8;1866:18;8597:37:1;;;;;;;8645:48;8673:1;8677:7;8686:6;8645:19;:48::i;:::-;8311:389;;:::o;10973:121::-;;;;:::o;5507:325:7:-;-1:-1:-1;;;;;3493:18:1;;5614:19:7;3493:18:1;;;;;;;;;;;;5735:17:7;:21;;;;;;;3493:18:1;;5712:19:7;5726:5;3493:18:1;5712:19:7;:::i;:::-;5711:45;;;;:::i;:::-;5685:23;5693:15;5685:5;:23;:::i;:::-;:71;;;;:::i;:::-;5684:87;;;;:::i;:::-;5660:17;:21;5678:2;-1:-1:-1;;;;;5660:21:7;-1:-1:-1;;;;;5660:21:7;;;;;;;;;;;;:111;;;;5782:42;5808:4;5814:2;5818:5;5782:25;;;;;:42;;:::i;:::-;5603:229;5507:325;;;:::o;265:5570::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;265:5570:7;;;-1:-1:-1;265:5570:7;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:177:8;93:13;;-1:-1:-1;;;;;135:31:8;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:526::-;302:6;310;318;326;334;387:3;375:9;366:7;362:23;358:33;355:53;;;404:1;401;394:12;355:53;433:9;427:16;417:26;;462:49;507:2;496:9;492:18;462:49;:::i;:::-;452:59;;530:49;575:2;564:9;560:18;530:49;:::i;:::-;520:59;;598:49;643:2;632:9;628:18;598:49;:::i;:::-;588:59;;666:50;711:3;700:9;696:19;666:50;:::i;:::-;656:60;;196:526;;;;;;;;:::o;727:127::-;788:10;783:3;779:20;776:1;769:31;819:4;816:1;809:15;843:4;840:1;833:15;859:168;899:7;965:1;961;957:6;953:14;950:1;947:21;942:1;935:9;928:17;924:45;921:71;;;972:18;;:::i;:::-;-1:-1:-1;1012:9:8;;859:168::o;1032:217::-;1072:1;1098;1088:132;;1142:10;1137:3;1133:20;1130:1;1123:31;1177:4;1174:1;1167:15;1205:4;1202:1;1195:15;1088:132;-1:-1:-1;1234:9:8;;1032:217::o;1614:128::-;1654:3;1685:1;1681:6;1678:1;1675:13;1672:39;;;1691:18;;:::i;:::-;-1:-1:-1;1727:9:8;;1614:128::o;1929:125::-;1969:4;1997:1;1994;1991:8;1988:34;;;2002:18;;:::i;:::-;-1:-1:-1;2039:9:8;;1929:125::o;2059:380::-;2138:1;2134:12;;;;2181;;;2202:61;;2256:4;2248:6;2244:17;2234:27;;2202:61;2309:2;2301:6;2298:14;2278:18;2275:38;2272:161;;;2355:10;2350:3;2346:20;2343:1;2336:31;2390:4;2387:1;2380:15;2418:4;2415:1;2408:15;2272:161;;2059:380;;;:::o;:::-;265:5570:7;;;;;;",
  "sourcePath": "contracts/ChainEstateToken.sol",
  "type": "contract"
}